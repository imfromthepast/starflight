function drawHumanBody(){
	var bodyCont = new Container(),
		head = new Shape(),
		body = new Shape(),
		leftarm = new Shape(),
		rightarm = new Shape(),
		leftleg = new Shape(),
		rightleg = new Shape(),
		shorts = new Shape(),
		patch = new Shape()
		//// Color Declarations
        color = 'rgba(0, 0, 0, 1)',
        darkOrange = 'rgba(75, 26, 0, 1)',
        skin1 = 'rgba(246, 209, 141, 1)'

        rightleg.graphics
        	.s('black').ss(1)
	        .f(skin1)

//// right leg Drawing
			.mt(58.5, 92.5)
			.bt(58.5, 92.5, 59.02, 99.63, 60.32, 100.96)
			.bt(61.62, 102.28, 62.99, 103.55, 62.99, 103.55)
			.bt(62.99, 103.55, 64.03, 105.04, 63.98, 105.37)
			.bt(63.93, 105.69, 62.57, 108.72, 63.41, 110.37)
			.bt(64.25, 112.02, 66.79, 113.58, 66.79, 113.58)
			.lt(72.28, 113.58)
			.bt(72.28, 113.58, 70.82, 107.5, 70.65, 105.69)
			.bt(70.47, 103.87, 70.21, 100.54, 69.84, 100.03)
			.bt(69.48, 99.51, 69.02, 98.89, 69.02, 98.89)
			.bt(69.02, 98.89, 70.65, 93.31, 68.21, 89.78)
			.bt(65.78, 86.25, 58.5, 92.5, 58.5, 92.5)
			.cp()

//// right foot Drawing
			.mt(66.5, 111.5)
			.bt(66.5, 111.5, 64.83, 114.36, 65.09, 114.95)
			.bt(65.34, 115.54, 63.36, 116.64, 64.17, 117.68)
			.bt(64.98, 118.73, 64.38, 119.04, 66.23, 119.1)
			.bt(68.08, 119.17, 68.51, 117.42, 68.51, 117.42)
			.bt(68.51, 117.42, 68.16, 119.16, 70.22, 119.09)
			.bt(72.29, 119.02, 71.53, 117.42, 71.53, 117.42)
			.bt(71.53, 117.42, 72.29, 119.17, 74.55, 118.99)
			.bt(76.81, 118.82, 75.67, 118.01, 75.67, 118.01)
			.bt(75.67, 118.01, 76.21, 119.13, 76.9, 118.72)
			.bt(77.6, 118.3, 77, 116.77, 76.9, 116.65)
			.bt(76.79, 116.54, 69.92, 111.44, 69.92, 111.44)


		leftleg.graphics
        	.s('black').ss(1)
	        .f(skin1)
//// left leg Drawing
			.mt(42.5, 89.5)
			.bt(42.5, 89.5, 52.23, 92.01, 52.23, 92.01)
			.bt(52.23, 92.01, 50.73, 99.86, 50.71, 99.89)
			.bt(50.68, 99.92, 51.01, 99.98, 52.44, 102.54)
			.bt(53.38, 104.24, 50.88, 107.59, 49.08, 109.66)
			.bt(49.99, 111.45, 51.39, 114.55, 50.84, 115.59)
			.bt(50.05, 117.09, 45.96, 115.8, 45.75, 115.82)
			.bt(45.54, 115.84, 43.78, 116.09, 41.29, 116.5)
			.bt(38.81, 116.91, 36.76, 116.07, 36.76, 116.07)
			.bt(36.76, 116.07, 34.99, 116.28, 32.92, 116.21)
			.bt(30.86, 116.15, 31.86, 113.38, 31.86, 113.38)
			.lt(38.27, 113.15)
			.bt(38.27, 113.15, 40.53, 111.57, 42.08, 110.49)
			.bt(42.23, 109.24, 42.67, 105.54, 42.67, 105.54)
			.bt(42.67, 105.54, 41.83, 104.71, 41.71, 103.85)
			.bt(41.58, 102.98, 42.62, 101.3, 42.62, 101.3)
			.bt(42.62, 101.3, 42.29, 100.7, 41.92, 98.49)
			.bt(41.55, 96.29, 42.5, 89.5, 42.5, 89.5)
			.lt(42.5, 89.5)
			.cp()

		leftarm.graphics
        	.s('black').ss(1)
	        .f(skin1)

//// left arm
//// Bezier 99 Drawing
			.mt(35.5, 85.5)
			.bt(35.5, 85.5, 35.61, 89.34, 35.84, 89.48)
			.bt(36.07, 89.61, 37.82, 90.96, 38.9, 90)
			.bt(39.98, 89.05, 39.38, 86.67, 39.42, 86.69)
			.bt(39.46, 86.71, 39.59, 88.41, 39.59, 88.41)
			.lt(42.25, 88.37)
			.lt(44.36, 82.93)
			.lt(42.24, 76.98)
			.lt(40.06, 69.37)
			.lt(37.7, 69.65)
			.lt(36.87, 70.4)
			.bt(36.87, 70.4, 36.15, 73.23, 36.2, 74.23)
			.bt(36.26, 75.22, 37.37, 80.45, 37.37, 80.45)


//// Bezier 98 Drawing
			.mt(37.5, 68.5)
			.bt(37.5, 68.5, 36.07, 72.78, 36.15, 74.5)
			.bt(36.23, 76.22, 37.22, 80.52, 37.22, 80.52)
			.bt(37.22, 80.52, 34.33, 84.39, 34.84, 84.81)
			.bt(35.35, 85.23, 36.43, 87.48, 37.62, 86.86)
			.bt(38.8, 86.23, 39.43, 84.36, 39.43, 84.36)
			.lt(37.31, 83.81)

//// Bezier 97 Drawing
			.mt(39.5, 55.5)
			.bt(39.5, 55.5, 36.81, 61.31, 36.91, 63.34)
			.bt(37, 65.37, 37.35, 69.77, 37.35, 69.77)
			.lt(40.46, 70.97)
			.lt(43.98, 65.8)
			.lt(44.26, 56.28)
			.lt(39.5, 55.5)
			.cp()
			
		shorts.graphics
        	.s('black').ss(1)
	        .f('rgb(0, 0, 255)')
//// shorts
//// Bezier 87 Drawing
			.mt(43.5, 80.5)
			.bt(43.5, 80.5, 40.36, 89.65, 40.85, 90.72)
			.bt(41.33, 91.79, 49.08, 94.35, 53.31, 93.49)
			.bt(57.55, 92.64, 55.17, 82.46, 55.17, 82.46)
			.lt(43.5, 80.5)
			.cp()

//// Bezier 88 Drawing
			.mt(52.5, 83.5)
			.bt(52.5, 83.5, 54.5, 95.48, 57.52, 95.46)
			.bt(60.53, 95.44, 64.73, 95.56, 67.58, 92.96)
			.bt(70.44, 90.35, 69.08, 85.66, 69.08, 85.66)
			.bt(69.08, 85.66, 66.58, 80.1, 66.55, 80.1)
			.bt(66.52, 80.1, 52.5, 83.5, 52.5, 83.5)
			.cp()

//// Bezier 86 Drawing
			.mt(42.5, 77.5)
			.bt(42.5, 77.5, 41.52, 80.83, 42.13, 81.8)
			.bt(42.74, 82.77, 49.32, 84.6, 56.42, 83.9)
			.bt(63.52, 83.2, 68.09, 81.4, 68.35, 80.02)
			.bt(68.61, 78.64, 65.55, 74.13, 65.55, 74.13)
			.lt(42.5, 77.5)
			.cp()
			.es()
//// Bezier 89 Drawing
			.mt(43.48, 81.5)
			.bt(43.48, 81.5, 42.22, 84.18, 44.73, 85.86)
			.bt(47.25, 87.53, 54.23, 89.2, 55.1, 88.94)
			.bt(55.97, 88.68, 65.76, 83.28, 65.77, 83)
			.bt(65.78, 82.71, 65.33, 80.1, 65.33, 80.1)
			.lt(55.46, 82.73)
			.lt(43.48, 81.5)
			.cp()

			.s('black').ss(1)
//// Bezier 90 Drawing
			.mt(50.5, 84.5)
			.bt(50.5, 84.5, 50.27, 86.95, 51.4, 87.82)
			.bt(52.54, 88.68, 54.13, 89.55, 54.13, 89.55)
			.lt(57.14, 86.7)

		body.graphics
			.s('black').ss(1)
			.f(skin1)
//// torso
//// Bezier 85 Drawing
			.mt(52.5, 45.27)
			.bt(52.5, 45.27, 44.04, 43.77, 39.8, 47.58)
			.bt(35.57, 51.38, 41.57, 60.41, 41.57, 60.41)
			.bt(41.57, 60.41, 34.98, 71.69, 38.99, 77.08)
			.bt(43.01, 82.48, 64.41, 83.16, 66.99, 77.29)
			.bt(69.58, 71.41, 71.35, 49.24, 67.6, 46.22)
			.bt(63.84, 43.19, 58.07, 42.72, 58.07, 42.72)
			.lt(52.5, 45.27)
			.cp()


			.f('rgb(128, 128, 128)')
//// Bezier 93 Drawing
			.mt(43.5, 74.5)
			.bt(43.5, 74.5, 45.22, 75.56, 45.02, 76.02)
			.bt(44.83, 76.47, 43.93, 75.83, 43.93, 75.83)
			.lt(44.52, 75.36)
			.lt(43.5, 74.5)
			.cp()
			.ef()

//// Bezier 95 Drawing
			.mt(41.5, 60.5)
			.bt(41.5, 60.5, 43.06, 57.95, 44.64, 57.86)
			.bt(46.21, 57.78, 49.14, 57.86, 49.14, 57.86)

//// Bezier 96 Drawing
			.mt(41.5, 51.5)
			.bt(41.5, 51.5, 40.46, 53.83, 40.85, 57.07)
			.bt(41.24, 60.3, 41.68, 60.51, 41.68, 60.51)
			.es()


			.s('black').ss(1)
//// Bezier 106 Drawing
			.mt(52.5, 58.5)
			.bt(52.5, 58.5, 57.98, 60.52, 60.58, 59.43)
			.bt(63.18, 58.34, 64.98, 54.93, 64.98, 54.93)

		var neck = new Shape()
		neck.graphics
			.s('black').ss(1)
			.f(skin1)
//// Bezier 84 Drawing
			.mt(47.5, 35.5)
			.bt(47.5, 35.5, 48.68, 43.21, 47.52, 45.57)
			.bt(46.35, 47.93, 50.48, 51.02, 53.95, 49.75)
			.bt(57.41, 48.47, 60.42, 43.83, 60.62, 43.36)
			.bt(60.82, 42.89, 57.54, 37.89, 57.6, 34.09)
			.bt(57.65, 30.29, 57.6, 30.29, 57.6, 30.29)
			.lt(47.5, 35.5)
			.cp()

		head.graphics
			.s('black').ss(1)
			.f(skin1)
//// human head
//// Bezier 4 Drawing
			.mt(35.5, 22.5)
			.bt(35.5, 22.5, 34.15, 34.33, 35.37, 35.68)
			.bt(36.6, 37.03, 54.66, 41.01, 59.34, 35.3)
			.bt(64.01, 29.58, 63.07, 24.97, 63.07, 24.97)
			.bt(63.07, 24.97, 67.28, 26.96, 67.96, 24.2)
			.bt(68.64, 21.43, 71.74, 16.31, 68.92, 15.34)
			.bt(66.1, 14.36, 63.04, 15.76, 63.04, 15.76)
			.bt(63.04, 15.76, 64.92, 6.13, 58.68, 3.89)
			.bt(52.43, 1.66, 41.08, 0.97, 39.08, 3.69)
			.bt(37.09, 6.42, 35.33, 15.11, 35.33, 15.11)
			.lt(36.44, 19.09)
			.lt(35.5, 22.5)
			.cp()
			
			.f('rgb(255, 255, 255)')
//// Bezier 5 Drawing
			.mt(46.99, 18.5)
			.lt(53.47, 18.67)
			.bt(53.47, 18.67, 53.38, 22.11, 50.78, 22.01)
			.bt(48.19, 21.9, 46.99, 18.5, 46.99, 18.5)
			.cp()

//// Bezier 6 Drawing
			.mt(40.11, 18.2)
			.lt(35.32, 18.36)
			.bt(35.32, 18.36, 35.39, 21.81, 37.31, 21.7)
			.bt(39.22, 21.6, 40.11, 18.2, 40.11, 18.2)
			.cp()
			.es()

			.f('rgb(0, 0, 0)')
//// Bezier Drawing
			.mt(46, 17)
			.bt(46, 17, 46.8, 13.41, 49.1, 13.61)
			.bt(51.41, 13.82, 56.94, 16.27, 56.94, 16.27)
			.lt(46, 17)
			.cp()

//// Bezier 2 Drawing
			.mt(41, 16.93)
			.lt(33.81, 17.19)
			.lt(34.25, 13.75)
			.lt(41, 16.93)
			.cp()

			.s('black').ss(1)
			.f(skin1)
//// Bezier 3 Drawing
			.mt(41.5, 16.5)
			.bt(41.5, 16.5, 40.73, 18.75, 39.03, 20.04)
			.bt(37.33, 21.34, 33.58, 23.09, 33.58, 23.09)
			.lt(41.83, 25.53)
			.es()
			
			.f('black')
			.dc(50,19,1)
			.dc(37,19,1)
			.ef()

			.s('black').ss(1)
//// Bezier 22 Drawing
			.mt(41.5, 29.5)
			.bt(41.5, 29.5, 50.29, 30.21, 52.4, 29)
			.bt(54.51, 27.8, 55.16, 27.36, 55.16, 27.36)
			.lt(52.19, 25.73)
			.bt(52.19, 25.73, 56.31, 27.19, 56.28, 28.49)
			
			.f(darkOrange)
//// Bezier 83 Drawing
			.mt(44.5, 6.5)
			.bt(44.5, 6.5, 53.02, 2.32, 57.11, 5)
			.bt(61.21, 7.69, 60.49, 19.76, 60.49, 19.76)
			.lt(63.74, 15.58)
			.lt(66.14, 14.95)
			.bt(66.14, 14.95, 66.76, 11.61, 68.7, 10.09)
			.bt(70.64, 8.57, 71.41, 8.06, 71.41, 8.06)
			.bt(71.41, 8.06, 66.92, 6.72, 66.52, 5.7)
			.bt(66.12, 4.68, 67.94, 2.98, 67.94, 2.98)
			.bt(67.94, 2.98, 49.58, -1.24, 37.18, 0.63)
			.bt(24.78, 2.5, 33.23, 7.55, 33.23, 7.55)
			.bt(33.23, 7.55, 31.32, 3.42, 34.29, 3.67)
			.bt(37.27, 3.92, 37.22, 8.37, 37.22, 8.37)
			.bt(37.22, 8.37, 37.7, 4.05, 39.19, 3.63)
			.bt(40.69, 3.2, 44.5, 6.5, 44.5, 6.5)
			.cp()
		
		rightarm.graphics
			.s('black').ss(1)
			.f(skin1)        				
//// right arm
//// human arm 2 Drawing
			.mt(72.98, 51.9)
			.bt(72.97, 51.9, 75.27, 54.7, 77.58, 56.34)
			.bt(79.89, 57.99, 83.28, 63.51, 83.75, 66.51)
			.bt(83.83, 66.98, 83.87, 67.42, 83.89, 67.81)
			.bt(84, 67.77, 84.07, 67.75, 84.07, 67.75)
			.bt(84.83, 68.37, 84.57, 73.44, 81.94, 76.06)
			.bt(79.32, 78.68, 69.86, 79.88, 69.86, 79.88)
			.bt(69.86, 79.88, 68.47, 82.43, 68.21, 83.25)
			.bt(67.96, 84.07, 65.98, 84.94, 64.93, 85.22)
			.bt(63.88, 85.5, 62.41, 85.16, 61.46, 85.03)
			.bt(60.52, 84.89, 61.41, 82.96, 60.83, 83.16)
			.bt(60.25, 83.35, 59.62, 82.88, 59.08, 81.8)
			.bt(58.55, 80.73, 60.52, 80.05, 60.52, 80.05)
			.bt(60.52, 80.05, 60.2, 79.21, 59.17, 78.84)
			.bt(58.14, 78.47, 58.84, 77.41, 58.86, 76.92)
			.bt(58.88, 76.42, 63.48, 74.84, 65.52, 74.77)
			.bt(67.56, 74.7, 68.9, 73.2, 71.31, 71.26)
			.bt(72.57, 70.26, 74.46, 69.82, 75.99, 69.63)
			.bt(75.92, 69.57, 73.38, 68.48, 69.93, 65.76)
			.bt(66.48, 63.04, 66.5, 57.49, 66.5, 57.49)
			.lt(72.97, 51.9)
			.lt(72.98, 51.9)
			.cp()
		var shoulder = new Shape()
		shoulder.graphics.s('black').ss(1).f(skin1)
//// Bezier 100 Drawing
			.mt(63.7, 56.54)
			.bt(63.7, 56.54, 65.62, 56.45, 67.51, 56.89)
			.bt(69.4, 57.33, 73.77, 58.34, 73.77, 58.34)
			.bt(73.77, 58.34, 76.14, 51.84, 72.33, 48)
			.bt(68.51, 44.15, 63.75, 44.1, 63.75, 44.1)
			.es()
		
		patch.graphics
			.f(skin1)
//// Bezier 103 Drawing
			.mt(70.5, 55.5)
			.bt(70.5, 55.5, 69.79, 59.96, 70.13, 60.36)
			.bt(70.48, 60.76, 74.03, 62.4, 74.03, 62.4)
			.lt(76.27, 58.52)
			.lt(72.66, 54.18)
        
			
//// Bezier 104 Drawing
			.mt(45.5, 47.5)
			.lt(48.7, 46.14)
			.lt(59.35, 43.1)
			.lt(62.7, 46.82)
			.bt(62.7, 46.82, 59.87, 54.08, 58.98, 54.25)
			.bt(58.09, 54.41, 47.04, 52.13, 47.04, 52.13)
			.lt(45.5, 47.5)
			.cp()
			.ef()


			.s('black').ss(1)
//// Bezier 105 Drawing
			.mt(53, 47)
			.bt(53, 47, 57.36, 46.21, 60.29, 46.7)
			.bt(63.21, 47.19, 62.47, 47.14, 62.46, 47.14)

	bodyCont.addChild(leftleg,rightleg,leftarm,shorts,body,neck,rightarm,shoulder,head,patch)
	return bodyCont
}
function drawVeloxBody(){
	var bodyCont = new Container(),
		head = new Shape(),
		arms = new Shape(),
		legs = new Shape(),
		body = new Shape(),
//// Color Declarations
        color = 'rgba(0, 0, 0, 1)',
        lightOrange = 'rgba(207, 124, 91, 1)',
        color2 = 'rgba(174, 57, 3, 1)',
        darkOrange = 'rgba(75, 26, 0, 1)',
        midOrange = 'rgba(150, 57, 0, 1)',
        shadowColor = 'rgba(133, 44, 1, 1)'
	body.graphics
		.s('black').ss(1)
		.f(lightOrange)
		.dc(19,31,7)
		.f(shadowColor)

        .mt(41.5, 107.58)
        .bt(41.5, 107.58, 36.12, 109.69, 36.16, 111.65)
        .bt(36.2, 113.61, 36.59, 114.33, 36.59, 114.33)
        .bt(36.59, 114.33, 37.19, 111.36, 39.84, 110.47)
        .bt(42.48, 109.59, 41.5, 107.58, 41.5, 107.58)
        .cp()

        .mt(41.5, 107.58)
        .bt(41.5, 107.58, 36.12, 109.69, 36.16, 111.65)
        .bt(36.2, 113.61, 36.59, 114.33, 36.59, 114.33)
        .bt(36.59, 114.33, 37.19, 111.36, 39.84, 110.47)
        .bt(42.48, 109.59, 41.5, 107.58, 41.5, 107.58)
        .cp()

        .mt(43.5, 108.44)
        .bt(43.5, 108.44, 41.01, 110.17, 41.57, 111.98)
        .bt(42.13, 113.79, 43.74, 114.59, 43.74, 114.59)
        .bt(43.74, 114.59, 43.01, 113.51, 43.77, 111.78)
        .bt(44.52, 110.05, 45.07, 108.9, 44.95, 108.47)
        .bt(44.84, 108.05, 43.5, 108.44, 43.5, 108.44)
        .cp()

        .mt(41.5, 98.04)
        .bt(41.5, 101.51, 38.63, 107.85, 40.43, 108.93)
        .bt(42.23, 110.02, 45.93, 112.05, 46.35, 109.4)
        .bt(46.77, 106.76, 43.28, 105.93, 43.51, 103.64)
        .bt(43.74, 101.35, 46.01, 96.85, 44.57, 96.92)
        .bt(43.13, 96.99, 41.5, 94.57, 41.5, 98.04)
        .cp()

        .mt(56.5, 88.5)
        .bt(56.5, 88.5, 43.8, 91.71, 41.89, 94.94)
        .bt(39.97, 98.16, 38.45, 99.94, 41.04, 100.22)
        .bt(43.63, 100.51, 46.15, 99.53, 47.07, 96.68)
        .bt(47.99, 93.83, 59.06, 88.92, 59.06, 88.92)
        .lt(56.5, 88.5)
        .cp()

        .mt(57.5, 98.5)
        .bt(57.5, 98.5, 59.03, 105.21, 58.38, 106.75)
        .bt(57.72, 108.3, 56.6, 109.95, 58.02, 110.15)
        .bt(59.44, 110.34, 64.17, 110.59, 63.33, 108.04)
        .bt(62.49, 105.49, 61.87, 107.34, 60.87, 103.84)
        .bt(59.87, 100.34, 60.14, 98.58, 60.14, 98.58)
        .lt(57.5, 98.5)
        .cp()

        .mt(58.5, 108.5)
        .bt(58.5, 108.5, 55.74, 110.21, 55.61, 111.23)
        .bt(55.49, 112.25, 55.77, 113.81, 55.77, 113.81)
        .bt(55.77, 113.81, 58.47, 111.3, 58.78, 111.21)
        .bt(59.08, 111.12, 60.35, 108.71, 60.35, 108.71)
        .lt(58.5, 108.5)
        .cp()        

        .mt(60.31, 107.5)
        .bt(60.31, 107.5, 59.41, 111.78, 60.01, 112.89)
        .bt(60.61, 113.99, 61.7, 114.39, 61.7, 114.39)
        .bt(61.7, 114.39, 61.34, 112.2, 61.89, 111.19)
        .bt(62.43, 110.19, 60.31, 107.5, 60.31, 107.5)
        .cp()

        .mt(66.6, 84.14)
        .bt(66.6, 84.14, 55.19, 95.24, 55.52, 97.64)
        .bt(55.84, 100.04, 55.79, 102.06, 59.85, 101.1)
        .bt(63.9, 100.14, 60.64, 96.97, 61.15, 94.61)
        .bt(61.67, 92.25, 69.73, 84.01, 69.73, 84.01)
        .lt(66.6, 84.14)
        .cp()

        .f(color2)
        .mt(53.5, 81.5)
        .bt(53.5, 81.5, 51.16, 92.05, 57.83, 94.96)
        .bt(64.5, 97.86, 98.7, 108.51, 98.85, 100.16)
        .bt(99, 91.82, 94.11, 85.97, 81.46, 81.93)
        .bt(68.81, 77.9, 61.93, 79, 61.93, 79)
        .lt(53.5, 81.5)
        .cp()

        .f(darkOrange)
        .mt(54, 90)
        .lt(55.53, 93.29)
        .lt(60.04, 95.94)
        .lt(71.58, 99.03)
        .lt(83.64, 102.27)
        .lt(92.1, 103.31)
        .lt(97.16, 102.55)
        .lt(98.83, 100.76)
        .bt(98.83, 100.76, 85.1, 100.15, 75.57, 96.2)
        .bt(66.04, 92.25, 64.47, 84, 64.47, 84)
        .lt(54, 90)
        .cp()

        .f(color2)
        .mt(67.5, 111.5)
        .bt(67.5, 111.5, 63.46, 113.67, 63.8, 115.16)
        .bt(64.13, 116.64, 65.19, 118.83, 65.19, 118.83)
        .bt(65.19, 118.83, 65, 115.84, 67, 114.42)
        .bt(68.99, 113, 69.5, 111.95, 69.5, 111.95)
        .lt(67.5, 111.5)
        .cp()

        .mt(70.5, 111.5)
        .bt(69.5, 113.5, 68.4, 114.89, 69.14, 116.27)
        .bt(69.88, 117.64, 70.75, 118.7, 70.75, 118.7)
        .bt(70.75, 118.7, 70.42, 116.59, 70.89, 114.81)
        .bt(71.36, 113.03, 71.53, 112.02, 71.53, 112.02)
        .bt(71.53, 112.02, 71.5, 109.5, 70.5, 111.5)
        .cp()

        .mt(63.5, 102.5)
        .bt(63.5, 102.5, 64.21, 113.06, 68.39, 113.6)
        .bt(72.57, 114.14, 75.52, 112.51, 73.5, 111.04)
        .bt(71.47, 109.57, 70.26, 110.94, 68.66, 109.02)
        .bt(67.05, 107.09, 65.41, 102.49, 65.41, 102.49)
        .lt(63.5, 102.5)
        .cp()

        .mt(64.24, 88.01)
        .bt(64.24, 88.01, 58.52, 101.41, 61.42, 104.23)
        .bt(64.33, 107.06, 67.85, 106.72, 67.32, 103.53)
        .bt(66.79, 100.34, 64.98, 99.98, 65.27, 95.02)
        .bt(65.55, 90.06, 66.01, 86.77, 66.01, 86.77)
        .lt(64.24, 88.01)
        .cp()

        .mt(51.63, 112.02)
        .bt(51.63, 112.02, 47.98, 113.57, 47.97, 115.12)
        .bt(47.97, 116.67, 48.38, 118.17, 48.38, 118.17)
        .bt(48.38, 118.17, 48.5, 114.56, 51.05, 113.99)
        .bt(53.61, 113.41, 54.22, 113.12, 54.22, 113.12)
        .lt(51.63, 112.02)
        .cp()

        .mt(54.63, 111.05)
        .bt(54.63, 111.05, 52.14, 116.09, 52.91, 117.23)
        .bt(53.67, 118.37, 55.39, 119.03, 55.39, 119.03)
        .bt(55.39, 119.03, 54.35, 117.36, 55.07, 115.76)
        .bt(55.79, 114.16, 55.95, 112.86, 55.95, 112.85)
        .bt(55.95, 112.84, 54.63, 111.05, 54.63, 111.05)
        .cp()

        .mt(50.63, 101.36)
        .bt(50.63, 101.36, 48.73, 111.31, 50.11, 112.72)
        .bt(51.49, 114.12, 57.51, 115.01, 57.78, 113.44)
        .bt(58.05, 111.86, 54.87, 110.7, 54, 108.26)
        .bt(53.13, 105.82, 52.71, 101.17, 52.71, 101.17)
        .lt(50.63, 101.36)
        .cp()

        .mt(57.63, 87.79)
        .bt(57.63, 87.79, 47.04, 100.73, 48.91, 103.46)
        .bt(50.77, 106.18, 55.33, 105.02, 55.04, 102.91)
        .bt(54.76, 100.8, 55.49, 96.03, 56.37, 94.39)
        .bt(57.26, 92.75, 59.71, 87.26, 59.71, 87.26)
        .lt(57.63, 87.79)
        .cp()

        .f(shadowColor)
        .mt(37.5, 60.5)
        .bt(37.5, 60.5, 33.83, 67.85, 31.04, 68.73)
        .bt(28.26, 69.61, 24.16, 67.9, 22.56, 69.98)
        .bt(20.96, 72.05, 21.16, 76.25, 24.11, 76.39)
        .bt(27.06, 76.53, 38.22, 67.98, 38.22, 67.98)
        .lt(37.5, 60.5)
        .cp()

        .mt(25.5, 72.5)
        .bt(24.5, 74.5, 21.99, 76.71, 19.64, 75.45)
        .bt(17.29, 74.2, 16.99, 72.58, 16.99, 72.58)
        .bt(16.99, 72.58, 16.69, 73.52, 16.73, 74.48)
        .bt(16.77, 75.44, 18.08, 77.04, 18.07, 77.04)
        .bt(18.06, 77.04, 14.09, 74.77, 13.94, 72.33)
        .bt(13.78, 69.89, 13.96, 69.64, 13.96, 69.64)
        .bt(13.96, 69.64, 12.2, 69.81, 12.05, 70.96)
        .bt(11.9, 72.11, 12.58, 74.78, 12.58, 74.78)
        .bt(12.58, 74.78, 9.46, 72.21, 9.4, 69.83)
        .bt(9.35, 67.46, 10.17, 66.75, 10.17, 66.75)
        .bt(10.17, 66.75, 7.17, 68.13, 7.05, 66.66)
        .bt(6.93, 65.2, 8.26, 60.78, 11.76, 61)
        .bt(15.27, 61.22, 16.01, 60.83, 17.84, 65)
        .bt(19.67, 69.18, 26.5, 70.5, 25.5, 72.5)
        .cp()

        .mt(9.5, 63.5)
        .bt(9.5, 63.5, 4.74, 60.5, 4.63, 59.14)
        .bt(4.52, 57.79, 2.46, 56.71, 1.82, 58.07)
        .bt(1.19, 59.43, 3.33, 62.53, 5.79, 63.57)
        .bt(8.25, 64.61, 9.5, 63.5, 9.5, 63.5)
        .cp()

        .mt(3.5, 58.5)
        .bt(3.5, 58.5, 0.68, 55.02, 2.46, 52.81)
        .bt(4.25, 50.6, 6.77, 49.56, 6.77, 49.56)
        .bt(6.77, 49.56, 3.48, 54.3, 3.89, 55.6)
        .bt(4.3, 56.9, 3.5, 58.5, 3.5, 58.5)
        .cp()

        .mt(11.58, 66.45)
        .bt(11.58, 66.45, 5.87, 69.41, 4.35, 68)
        .bt(2.83, 66.59, 2.94, 64.67, 4.39, 64.85)
        .bt(5.85, 65.04, 8.08, 66.43, 11.01, 65.26)
        .bt(13.93, 64.09, 11.58, 66.45, 11.58, 66.45)
        .cp()

        .mt(4.5, 66.5)
        .bt(4.5, 66.5, 1.15, 64.94, 1.88, 61.19)
        .bt(2.62, 57.44, 7.5, 56, 7.5, 56)
        .bt(7.5, 56, 4.12, 60.54, 4.15, 61.88)
        .bt(4.18, 63.22, 6.12, 65.65, 5.61, 66.23)
        .bt(5.09, 66.82, 4.5, 66.5, 4.5, 66.5)
        .cp()

        .mt(14.5, 62.5)
        .bt(14.5, 63.5, 18.28, 59.44, 18.59, 57.11)
        .bt(18.9, 54.78, 17.21, 53.3, 15.85, 54.55)
        .bt(14.49, 55.8, 15.57, 58.29, 14.7, 59.19)
        .bt(13.84, 60.09, 12.04, 61.8, 12.8, 62.62)
        .bt(13.55, 63.44, 14.5, 61.5, 14.5, 62.5)
        .cp()

        .mt(16.5, 56.5)
        .bt(17.5, 55.5, 16.5, 50.54, 13.89, 49.19)
        .bt(11.29, 47.84, 10.73, 48.66, 10.73, 48.66)
        .bt(10.73, 48.66, 13.85, 51.84, 13.87, 53.05)
        .bt(13.89, 54.26, 15.5, 57.5, 16.5, 56.5)
        .cp()

        .mt(33.5, 17.5)
        .bt(33.5, 17.5, 34.03, 9.76, 33.16, 8.38)
        .bt(32.29, 7, 30.69, 5.21, 29.33, 6.75)
        .bt(27.97, 8.29, 30.18, 8.65, 30.71, 10.28)
        .bt(31.25, 11.91, 31.96, 17.82, 32.02, 17.82)
        .bt(32.08, 17.82, 33.5, 17.5, 33.5, 17.5)
        .cp()        

        .mt(30.5, 7.5)
        .bt(30.5, 7.5, 29.23, 3.79, 22.14, 4.14)
        .bt(15.05, 4.5, 12.25, 4.04, 13.01, 5.44)
        .bt(13.76, 6.85, 14.46, 7.89, 16.15, 7.35)
        .bt(17.85, 6.8, 18.12, 5.13, 22.5, 5.57)
        .bt(26.88, 6.02, 26.45, 5.85, 27.51, 6.47)
        .bt(28.57, 7.08, 29.64, 8.64, 30.3, 8.27)
        .bt(30.96, 7.89, 30.5, 7.5, 30.5, 7.5)
        .cp()

        .mt(14.5, 5.5)
        .bt(14.5, 5.5, 9.44, 6.05, 7.25, 8.89)
        .bt(5.05, 11.73, 5.61, 14.99, 7.15, 15.2)
        .bt(8.69, 15.41, 9.73, 14.8, 9.69, 13.78)
        .bt(9.65, 12.76, 7.02, 12.67, 7.65, 11.45)
        .bt(8.28, 10.23, 9.39, 7.92, 11.7, 7.5)
        .bt(14.02, 7.09, 15.36, 6.8, 15.39, 6.36)
        .bt(15.42, 5.92, 14.5, 5.5, 14.5, 5.5)
        .cp()

        .f(color2)
        .mt(40.5, 49.5)
        .bt(40.5, 49.5, 44.66, 45.28, 47.57, 48.53)
        .bt(50.48, 51.79, 71.11, 80.67, 68.28, 84.93)
        .bt(65.45, 89.2, 56.86, 92.91, 50.11, 91.63)
        .bt(43.36, 90.36, 37.63, 81.97, 35.65, 74.64)
        .bt(33.67, 67.3, 32.07, 55.64, 35.2, 52.94)
        .bt(38.33, 50.25, 40.5, 49.5, 40.5, 49.5)
        .cp()
        .es()

        .f(darkOrange)
        .mt(34, 59)
        .bt(34, 59, 33.69, 65.64, 38.87, 65.91)
        .bt(44.06, 66.17, 43.26, 66.26, 43.26, 66.26)
        .bt(43.26, 66.26, 40.25, 71.38, 44.74, 75.04)
        .bt(49.23, 78.71, 56.43, 81.9, 56.43, 81.9)
        .lt(59.5, 82.89)
        .lt(62.5, 86.39)
        .lt(64.81, 87.72)
        .bt(64.81, 87.72, 59.35, 91.31, 56.96, 91.43)
        .bt(54.57, 91.54, 49.85, 91.32, 48.44, 90.96)
        .bt(47.04, 90.59, 44.56, 89.08, 44.56, 89.08)
        .lt(36.93, 76.97)
        .bt(36.93, 76.97, 33.85, 66.94, 33.89, 65.51)
        .bt(33.94, 64.07, 34, 59, 34, 59)
        .cp()

        .s('black')
        .f(midOrange)
        .mt(46.04, 54.44)
        .bt(46.04, 54.44, 48.11, 50.12, 51.25, 53.07)
        .bt(54.39, 56.01, 53.17, 78.94, 60.39, 84.4)
        .bt(67.62, 89.85, 73.96, 94.07, 77.55, 89.04)
        .bt(81.14, 84, 74.36, 71.7, 67.58, 68.29)
        .bt(60.8, 64.88, 53.6, 50.4, 49.25, 46.94)
        .bt(44.89, 43.48, 38.86, 47.56, 35.63, 50.34)
        .bt(32.4, 53.11, 46.04, 54.44, 46.04, 54.44)
        .cp()

        .f(color2)
        .mt(41.5, 42.5)
        .bt(41.5, 42.5, 41.07, 47.41, 44.38, 48.92)
        .bt(47.68, 50.43, 43.69, 56.39, 40.04, 54.98)
        .bt(36.39, 53.56, 38.01, 45.01, 38.01, 45.01)
        .lt(41.5, 42.5)
        .cp()

        .f(shadowColor)
        .mt(42.5, 28.5)
        .bt(42.5, 28.5, 37.93, 36.77, 41.56, 41.02)
        .bt(45.2, 45.27, 35.85, 50.47, 35.79, 47.17)
        .bt(35.74, 43.87, 32.9, 35.25, 36.26, 30.69)
        .bt(39.62, 26.12, 42.5, 28.5, 42.5, 28.5)
        .cp()

        .f(color2)
        .mt(21.5, 35.5)
        .bt(21.5, 35.5, 12.07, 38.18, 12.09, 41.1)
        .bt(12.11, 44.02, 15.99, 47.46, 15.99, 47.46)
        .bt(15.99, 47.46, 14.01, 42.54, 15.11, 41.9)
        .bt(16.22, 41.25, 17.93, 43.89, 17.93, 43.89)
        .bt(17.93, 43.89, 16.81, 39.77, 18.52, 39.08)
        .bt(20.23, 38.39, 22.65, 36.55, 22.65, 36.55)
        .lt(21.5, 35.5)
        .cp()

        .mt(26, 42)
        .bt(26, 42, 15, 46, 18, 38)
        .bt(21, 30, 16.61, 26.17, 26.87, 19.21)
        .bt(37.14, 12.24, 45.4, 13.53, 50.73, 20.81)
        .bt(56.05, 28.09, 26, 42, 26, 42)
        .cp()

        .f(lightOrange)
        .dc(41,31,7)

        .f(color2)
        .mt(24.5, 37.5)
        .bt(16.5, 38.5, 19.43, 35.89, 16.74, 38.97)
        .bt(14.04, 42.05, 14.38, 46.62, 18.75, 46.91)
        .bt(23.11, 47.2, 27.79, 42.45, 27.5, 40.72)
        .bt(27.21, 38.98, 32.5, 36.5, 24.5, 37.5)
        .cp()

        .mt(30.5, 37.5)
        .bt(30.5, 37.5, 30.9, 35.22, 33.19, 35.48)
        .bt(35.49, 35.74, 42.76, 41.81, 36.88, 44.27)
        .bt(31.01, 46.73, 24.05, 46.96, 24.05, 46.96)
        .bt(24.05, 46.96, 30.85, 44.67, 30.89, 43.2)
        .bt(30.93, 41.73, 29.1, 42.26, 29.1, 42.26)
        .bt(29.1, 42.26, 32.5, 40.18, 32.11, 39.07)
        .bt(31.72, 37.96, 30.5, 37.5, 30.5, 37.5)
        .cp()

        .mt(46.5, 56.5)
        .bt(48.5, 53.5, 50.89, 53.02, 52.02, 56)
        .bt(53.16, 58.98, 54.79, 65.18, 57.79, 67.29)
        .bt(60.8, 69.4, 65.78, 73.71, 63.01, 75.57)
        .bt(60.24, 77.42, 53.97, 80.88, 53.04, 75.2)
        .bt(52.11, 69.52, 52.25, 64.37, 50.29, 62.07)
        .bt(48.33, 59.76, 44.5, 59.5, 46.5, 56.5)
        .cp()

        .f(darkOrange)
        .mt(55.5, 75.5)
        .bt(55.5, 75.5, 54.86, 71.63, 57.33, 71.61)
        .bt(59.8, 71.59, 61.51, 73.74, 61.48, 74.66)
        .bt(61.45, 75.58, 60.41, 77.23, 60.41, 77.23)
        .lt(55.5, 75.5)
        .cp()

        .f(color2)
        .mt(28.5, 73.5)
        .bt(28.5, 73.5, 27, 69.33, 22.05, 70.63)
        .bt(17.11, 71.93, 19.23, 74.07, 19.23, 74.07)
        .bt(19.23, 74.07, 21.96, 72.39, 24.12, 73.19)
        .bt(26.27, 73.99, 28.5, 73.5, 28.5, 73.5)
        .cp()

        .mt(33.5, 78.5)
        .bt(33.5, 78.5, 31.83, 72.44, 28.63, 71.49)
        .bt(25.43, 70.55, 26.17, 75.31, 26.17, 75.31)
        .lt(31.82, 79.74)
        .lt(33.5, 78.5)
        .cp()

        .mt(25.5, 83.5)
        .bt(25.5, 83.5, 21.88, 81.04, 21.64, 79.86)
        .bt(21.4, 78.67, 22.65, 76.27, 21.59, 76.36)
        .bt(20.52, 76.45, 19.39, 77.99, 19.38, 79.18)
        .bt(19.36, 80.38, 23.1, 83.91, 23.1, 83.91)
        .lt(25.5, 83.5)
        .cp()

        .mt(28.5, 80.5)
        .bt(29.5, 78.5, 30.36, 76.49, 34.78, 77.2)
        .bt(39.21, 77.92, 46.41, 80.07, 49.09, 78.6)
        .bt(51.78, 77.12, 54.82, 73.51, 57.77, 74.22)
        .bt(60.73, 74.93, 66.21, 78.66, 64.31, 80.8)
        .bt(62.4, 82.95, 52.95, 84.1, 52.95, 84.1)
        .bt(52.95, 84.1, 55.3, 85.96, 57.95, 86.13)
        .bt(60.59, 86.29, 60.59, 86.29, 60.59, 86.29)
        .bt(60.59, 86.29, 54.87, 88.72, 50.14, 87.87)
        .bt(45.41, 87.02, 43.55, 83.56, 43.55, 83.56)
        .bt(43.55, 83.56, 43.4, 86.75, 44.41, 87.64)
        .bt(45.42, 88.53, 45.99, 89.5, 45.99, 89.5)
        .bt(45.99, 89.5, 38.67, 89.91, 37.27, 86.69)
        .bt(35.88, 83.47, 35.56, 82.4, 35.56, 82.4)
        .bt(35.56, 82.4, 28.8, 85.05, 27.61, 83.56)
        .bt(26.42, 82.07, 27.5, 82.5, 28.5, 80.5)
        .cp()

        .mt(31.5, 81.5)
        .bt(31.5, 81.5, 32.52, 79.28, 29.36, 80.5)
        .bt(26.21, 81.72, 24.1, 82.63, 22.98, 82.6)
        .bt(21.86, 82.58, 19.3, 81, 18.99, 82.99)
        .bt(18.68, 84.98, 16.92, 86.22, 20.46, 86.18)
        .bt(24, 86.13, 31.5, 81.5, 31.5, 81.5)
        .cp()

        .mt(20.5, 84.5)
        .bt(20.5, 84.5, 13.68, 83.15, 13.88, 81.07)
        .bt(14.08, 78.99, 15.57, 78.44, 15.57, 78.44)
        .bt(15.57, 78.44, 16.53, 80.87, 17.69, 81.49)
        .bt(18.85, 82.11, 21.45, 83.4, 21.45, 83.4)
        .lt(20.5, 84.5)
        .cp()

        .mt(45.5, 19.5)
        .bt(46.5, 19.5, 49.01, 11.41, 48.65, 8.27)
        .bt(48.29, 5.12, 43.91, 5.79, 44.07, 7)
        .bt(44.23, 8.21, 45.84, 10.91, 45.37, 12.52)
        .bt(44.9, 14.13, 43.87, 17.81, 44.16, 18.59)
        .bt(44.45, 19.37, 44.5, 19.5, 45.5, 19.5)
        .cp()

        .mt(46.5, 7.5)
        .bt(47.5, 7.5, 44.95, 1.62, 37.54, 2.05)
        .bt(30.13, 2.49, 29.79, 1.26, 30.55, 2.88)
        .bt(31.32, 4.5, 30.71, 5.36, 32.79, 5.21)
        .bt(34.88, 5.06, 39.31, 3.69, 40.87, 4.16)
        .bt(42.42, 4.63, 44.86, 8.21, 45.88, 8.1)
        .bt(46.9, 8, 45.5, 7.5, 46.5, 7.5)
        .cp()

        .mt(32.5, 3.5)
        .bt(32.5, 3.5, 28.16, 2.23, 25.21, 3.7)
        .bt(22.26, 5.17, 21.18, 9.95, 21.54, 11.09)
        .bt(21.9, 12.22, 24.35, 13.03, 24.75, 12.59)
        .bt(25.14, 12.15, 23.05, 10.04, 23.85, 8.22)
        .bt(24.66, 6.4, 26.93, 4.17, 28.2, 4.14)
        .bt(29.47, 4.12, 32.77, 4.73, 32.83, 4.33)
        .bt(32.88, 3.93, 32.5, 3.5, 32.5, 3.5)
        .cp()
        .es()
        .f('black')
        .dc(42,33,2)
        .dc(18,33,2)

	bodyCont.addChild(body)
	return bodyCont
}
function drawThrynnBody(){
	var bodyCont = new Container(),
		head = new Shape(),
		leftarm = new Shape(),
		leftleg = new Shape(),
		rightarm = new Shape(),
		rightleg = new Shape(),
		body = new Shape(),
        //// Color Declarations
        green = 'rgba(2, 195, 44, 1)',
        darkgreen = 'rgba(1, 122, 28, 1)'
	
	body.graphics
		.s('black').ss(1)
		.beginFill(darkgreen)					

//// thrynn left leg Drawing
		.mt(36.6, 70.09)
		.lt(38.01, 73.09)
		.lt(39.1, 71.62)
        .bt(39.1, 71.62, 28.2, 76.21, 24.9, 85.35)
        .bt(21.6, 94.49, 38.71, 97.78, 38.71, 97.78)
		.lt(28.04, 110.79)
        .bt(28.04, 110.79, 21.25, 111.31, 20.77, 110.77)
        .bt(20.3, 110.24, 19.18, 107.51, 16.16, 107.75)
        .bt(13.14, 107.98, 8.56, 113.55, 8.56, 113.55)
        .bt(8.56, 113.55, 14.57, 110.83, 15.58, 111.7)
        .bt(16.59, 112.58, 16.1, 114.14, 17.61, 114.95)
        .bt(19.13, 115.76, 20.91, 117.16, 22.93, 116.49)
        .bt(24.96, 115.81, 25.57, 114.95, 25.57, 114.95)
        .bt(25.57, 114.95, 31.95, 117.24, 34.5, 116.46)
        .bt(37.05, 115.68, 37.15, 112.21, 37.15, 112.21)
		.lt(35.5, 110.98)
        .bt(35.5, 110.98, 38.32, 105.06, 41.52, 102.54)
        .bt(44.72, 100.02, 49.87, 96.32, 48.72, 92.88)
        .bt(47.56, 89.45, 42.23, 89.79, 42.23, 89.79)
        .bt(42.23, 89.79, 52.36, 90.07, 53.99, 87.82)
        .bt(55.63, 85.56, 56.79, 84, 56.79, 84)
		.es()
		.ef()

		
		.s('black').ss(1)
		.beginFill(darkgreen)	
//// thrynn left arm Drawing
		.mt(23.5, 61.5)
        .bt(23.5, 61.5, 17.34, 60.92, 14.33, 63.17)
        .bt(11.32, 65.43, 9.39, 65.02, 10, 68.9)
        .bt(10.61, 72.78, 13, 73.63, 13, 73.63)
        .bt(13, 73.63, 11.95, 69.49, 12.65, 68.1)
        .bt(13.35, 66.71, 13.68, 66.6, 13.68, 66.6)
        .bt(13.68, 66.6, 12.85, 67.86, 14.05, 70.01)
        .bt(15.25, 72.16, 18.3, 73.34, 18.3, 73.34)
        .bt(18.3, 73.34, 15.89, 69.9, 16.43, 68.12)
        .bt(16.98, 66.35, 19.28, 65.74, 19.28, 65.74)
		.lt(23.98, 66.91)
		.lt(28.01, 66.26)
		.lt(26.96, 61.17)
		.lt(23.5, 61.5)
		.cp()
		.es()
		.ef()

		
		.s('black').ss(1)
		.beginFill(green)	
//// thrynn body Drawing
		.mt(42.5, 15.5)
        .bt(42.5, 15.5, 45.91, 17.42, 45.71, 19.97)
        .bt(45.5, 22.51, 39.96, 25.32, 34.87, 34.52)
        .bt(29.78, 43.72, 31.41, 45.17, 37.42, 47.41)
        .bt(43.42, 49.65, 50.1, 59.68, 56.89, 62.48)
        .bt(63.69, 65.27, 61.57, 72.57, 69.67, 75.6)
        .bt(77.77, 78.64, 82.94, 80.88, 90.2, 74.86)
        .bt(97.45, 68.84, 92.13, 49.21, 92.95, 50.33)
        .bt(93.77, 51.44, 102.05, 72.03, 96.11, 79.54)
        .bt(90.17, 87.04, 85.16, 88.85, 76.11, 90.58)
        .bt(67.06, 92.32, 48.91, 90.62, 45.75, 89.21)
        .bt(42.59, 87.79, 25.1, 79.59, 23, 65.67)
        .bt(20.89, 51.75, 19.1, 51.13, 24.09, 39.74)
        .bt(29.09, 28.36, 16.53, 22.5, 16.53, 22.5)
		.lt(30.18, 16.86)
		.lt(42.5, 15.5)
		.cp()
		.es()
		.ef()

		
		.s('black').ss(1)
		.beginFill('white')	
//// under belly Drawing
		.mt(18.5, 24.5)
        .bt(18.5, 24.5, 25.63, 27.65, 25.53, 32.96)
        .bt(25.43, 38.27, 21.44, 38.92, 19.73, 44.86)
        .bt(18.03, 50.8, 19.06, 63.02, 22.83, 69.66)
        .bt(26.6, 76.3, 29.33, 80.56, 35.07, 84.16)
        .bt(40.81, 87.76, 47.7, 91.48, 52.45, 91.46)
        .bt(57.21, 91.43, 75.96, 96, 86.32, 90.56)
        .bt(96.68, 85.12, 98.79, 77.13, 98.81, 74.47)
        .bt(98.82, 71.81, 96.05, 60.25, 96.04, 60.25)
        .bt(96.02, 60.25, 98.21, 77.33, 93.99, 80.23)
        .bt(89.78, 83.14, 83.92, 90.09, 65.18, 86.42)
        .bt(46.45, 82.74, 31.61, 75.85, 27.94, 64.24)
        .bt(24.27, 52.63, 26.02, 47.52, 25.55, 45.75)
        .bt(25.08, 43.99, 29.51, 32.21, 30.54, 27.8)
        .bt(31.58, 23.38, 38.79, 25.46, 37.06, 19.87)
        .bt(35.33, 14.29, 28.57, 20.31, 28.57, 20.31)
		.lt(18.5, 24.5)
		.cp()
		.es()
		.ef()

		
		.beginFill('white')	
//// white belly Drawing
		.mt(35.5, 18.5)
        .bt(35.5, 18.5, 35.82, 17.27, 37.6, 18.11)
        .bt(39.38, 18.95, 42.2, 19.74, 41.04, 22.03)
        .bt(39.88, 24.31, 37.25, 22.3, 32.94, 28.92)
        .bt(28.63, 35.55, 26.66, 40.24, 27.22, 42.73)
        .bt(27.77, 45.22, 28.51, 45.91, 28.51, 45.91)
        .bt(28.51, 45.91, 25.88, 46.84, 26.18, 52.41)
        .bt(26.48, 57.97, 30.62, 68.5, 34.08, 71.81)
        .bt(37.54, 75.13, 55.06, 84.12, 62.85, 85.66)
        .bt(70.63, 87.2, 82.91, 86.71, 89.48, 82.68)
        .bt(96.05, 78.65, 95.99, 70.78, 95.98, 68.6)
        .bt(95.96, 66.43, 95.62, 59.19, 95.62, 59.19)
        .bt(95.62, 59.19, 99.22, 71.11, 96.68, 77)
        .bt(94.14, 82.89, 88.01, 90.81, 81.27, 91.24)
        .bt(74.53, 91.67, 64.95, 90.43, 62.38, 89.8)
        .bt(59.81, 89.17, 40.91, 85.09, 40.1, 83.97)
        .bt(39.3, 82.85, 34.26, 76.38, 34.24, 76.37)
        .bt(34.23, 76.35, 23.66, 60.68, 23.66, 60.68)
        .bt(23.66, 60.68, 22.16, 47.4, 22.16, 47.35)
        .bt(22.16, 47.29, 25.8, 39.09, 25.8, 39.09)
		.lt(30.54, 26.13)
		.lt(30.82, 20.39)
		.lt(35.5, 18.5)
		.cp()
		.es()
		.ef()

		
		.s('black').ss(1)
		.beginFill(green)	
//// thrynn head Drawing
		.mt(43.33, 16.3)
        .bt(43.33, 15.3, 38.68, 14.43, 36.69, 12.77)
        .bt(34.69, 11.11, 34.39, 3.89, 30.39, 5.7)
        .bt(26.38, 7.51, 25.18, 6.29, 22.94, 7.87)
        .bt(20.69, 9.46, 21, 11.69, 17.86, 12.47)
        .bt(14.72, 13.24, 2.18, 16.66, 2.78, 22.57)
        .bt(3.38, 28.48, 23.33, 27.33, 26.71, 24.21)
        .bt(30.09, 21.08, 29.63, 21.97, 34.98, 20.9)
        .bt(40.33, 19.82, 37.58, 18.37, 37.58, 18.37)
		.es()
		.ef()

		
		.s('black').ss(1)
		.beginFill('white')	
//// eye Drawing
		.mt(26.32, 12.68)
		.lt(33.05, 12.49)
        .bt(33.05, 12.49, 34.42, 15.01, 32.34, 15.31)
        .bt(30.25, 15.6, 29.26, 15.98, 28.2, 15.38)
        .bt(27.13, 14.78, 26.32, 12.68, 26.32, 12.68)
		.cp()
		.es()
		.ef()


		.beginFill('black')	
//// pupil Drawing
		.mt(29.5, 12.5)
        .bt(29.5, 12.5, 29.94, 14.08, 30.39, 14.57)
        .bt(30.83, 15.05, 31.66, 13.07, 31.66, 13.07)
		.lt(29.5, 12.5)
		.cp()
		.es()
		.ef()

		
		.s('black').ss(1)
//// eyebrow Drawing
		.mt(26.5, 10.5)
        .bt(26.5, 10.5, 29.27, 7.02, 30.84, 7.15)
        .bt(32.4, 7.29, 33.03, 8.95, 33.03, 8.95)
		.es()
		.ef()

		
		.s('black').ss(1)	
//// smile Drawing
		.mt(34.89, 17.38)
        .bt(34.89, 17.38, 38, 17.92, 38.71, 19.45)
        .bt(39.41, 20.98, 38.52, 21.24, 38.52, 21.24)        
		.es()
		.ef()

		
		.s('black').ss(1)	
//// nostril Drawing
		.mt(7.5, 21.5)
        .bt(7.5, 21.5, 5.68, 21.74, 6.22, 21.07)
        .bt(6.76, 20.39, 8.27, 19.44, 10.24, 19.92)
        .bt(12.22, 20.41, 7.48, 20.44, 7.48, 20.44)
		.es()
		.ef()

		
		.s('black').ss(1)
		.beginFill(green)	
//// thrynn right arm Drawing
		.mt(31.5, 55.5)
        .bt(31.5, 55.5, 34.19, 61.87, 33.03, 63.72)
        .bt(31.87, 65.56, 23.29, 63.89, 19.86, 66.53)
        .bt(16.44, 69.17, 13.77, 70.14, 14.69, 73.86)
        .bt(15.6, 77.58, 17.76, 77.9, 17.76, 77.9)
        .bt(17.76, 77.9, 15.44, 73.83, 17.33, 72.06)
        .bt(19.21, 70.28, 18.27, 71.11, 18.27, 71.11)
        .bt(18.27, 71.11, 17.56, 74.09, 19.03, 75.96)
        .bt(20.49, 77.84, 24.52, 78.05, 24.52, 78.05)
        .bt(24.52, 78.05, 20.97, 75.91, 20.98, 73.81)
        .bt(21, 71.71, 21.39, 70.54, 21.39, 70.54)
        .bt(21.39, 70.54, 24.17, 70.47, 25.07, 69.69)
        .bt(25.97, 68.91, 26.15, 68, 26.15, 68)
        .bt(26.15, 68, 37.12, 68.97, 38.63, 66.38)
        .bt(40.14, 63.8, 36.43, 56.83, 36.43, 56.83)
		.es()
		.ef()

		
		.s('black').ss(1)
		.beginFill(green)	
//// thrynn right leg Drawing
		.mt(38.5, 72.5)
        .bt(38.5, 72.5, 43.24, 75, 43.36, 76.14)
        .bt(43.49, 77.28, 37.87, 85.98, 40.91, 91.75)
        .bt(43.95, 97.51, 52.97, 98.3, 55.64, 96.94)
        .bt(58.31, 95.59, 60.01, 93.97, 60.01, 93.97)
        .bt(60.01, 93.97, 62.99, 103.59, 62.7, 106.63)
        .bt(62.42, 109.66, 60.16, 114.4, 60.16, 114.4)
        .bt(60.16, 114.4, 56.21, 115.35, 54.52, 114.37)
        .bt(52.84, 113.39, 49.44, 109.24, 45.44, 111.1)
        .bt(41.43, 112.95, 39.57, 117.36, 39.57, 117.36)
        .bt(39.57, 117.36, 43.32, 113.91, 45.39, 114.52)
        .bt(47.46, 115.13, 47.56, 116, 47.56, 116)
        .bt(47.56, 116, 46.01, 119.26, 52.93, 119.07)
        .bt(59.84, 118.89, 61.32, 118.16, 61.32, 118.16)
        .bt(61.32, 118.16, 61.93, 118.7, 66.31, 118.26)
        .bt(70.69, 117.83, 74.06, 117.43, 70.8, 114.2)
        .bt(67.54, 110.97, 67.1, 109.36, 67.72, 105.8)
        .bt(68.34, 102.23, 68.96, 88.6, 66.73, 85.12)
        .bt(64.5, 81.64, 63.23, 77.59, 60.36, 79.58)
        .bt(57.5, 81.57, 57.62, 84.13, 57.62, 84.13)
		.lt(60.42, 75.97)

	bodyCont.addChild(body)
	return bodyCont
}
function drawElowanBody(){
	var bodyCont = new Container(),
		eye1 = new Shape(),
		eye2 = new Shape(),
		arm1 = new Shape(),
		arm2 = new Shape(),
		leg1 = new Shape(),
		leg2 = new Shape(),
		body = new Shape(),
		head = new Shape(),
		green = 'rgba(2, 195, 44, 1)',
		brown = 'rgba(111, 76, 19, 1)'				
	leg1.graphics.beginStroke('#000').ss(1).beginFill(brown)				        
        .mt(50.28, 101.98)
        .bt(50.28, 101.98, 47.21, 104.81, 46.41, 109.9)
        .bt(45.61, 114.99, 49.59, 119.67, 49.59, 119.67)
        .bt(49.59, 119.67, 47.89, 115.47, 49.16, 111.34)
        .bt(50.44, 107.22, 52.92, 105.56, 52.92, 105.56)
        .lt(50.28, 101.98)
        .ef()
        .cp()
    eye1.graphics.beginStroke('#000').ss(1).beginRadialGradientFill(['rgb(255, 255, 255)',blendedColor('rgb(255, 255, 255)', 'rgb(255, 0, 0)', 0.5),'rgb(255, 0, 0)'],[0,0.1,1],95, 102, 4, 103, 109, 21)
    	.dc(42, 37, 6)
    	.ef()
    	.f('#000')
    	.dc(39, 39, 1)
    head.graphics.beginStroke('#000').ss(1).beginFill(green)			        
        .mt(58.71, 18.35)
        .bt(58.71, 18.35, 62.3, 15.85, 62.32, 12.19)
        .bt(62.35, 8.53, 61.09, 3.33, 62.08, 1.93)
        .bt(63.07, 0.54, 57.98, 3.63, 57.07, 5.5)
        .bt(56.16, 7.36, 53.74, 12.84, 53.74, 12.85)
        .bt(53.74, 12.87, 56.35, 19.41, 56.35, 19.41)
        .lt(58.71, 18.35)
        .cp()
        .mt(47.32, 15.36)
        .bt(47.32, 15.36, 47.84, 9.88, 50.49, 8.2)
        .bt(53.14, 6.53, 56.49, 3.36, 56.42, 1.5)
        .bt(56.35, -0.37, 56.35, -0.37, 56.35, -0.37)
        .bt(56.35, -0.37, 59.28, 5.05, 58.16, 7.82)
        .bt(57.05, 10.58, 53.37, 19.29, 53.37, 19.29)
        .bt(53.37, 19.29, 49.95, 22.73, 49.95, 22.71)
        .bt(49.95, 22.69, 47.32, 15.36, 47.32, 15.36)
        .cp()
        .mt(44.37, 23.04)
        .bt(44.37, 23.04, 41.33, 18.69, 42.63, 16.08)
        .bt(43.93, 13.46, 45.25, 8.68, 45.25, 8.68)
        .bt(45.25, 8.68, 48.98, 11.31, 49.52, 14)
        .bt(50.06, 16.68, 49.85, 27.15, 49.85, 27.15)
        .lt(44.37, 23.04)
        .cp()
        .mt(60.39, 28.16)
        .bt(60.39, 28.16, 66.01, 21.84, 65.05, 17.64)
        .bt(64.09, 13.43, 63.27, 8.48, 63.27, 8.48)
        .bt(63.27, 8.48, 59.28, 10.06, 58.68, 14.27)
        .bt(58.07, 18.47, 56.09, 21.01, 56.07, 21.01)
        .bt(56.05, 21.01, 57.93, 29.26, 57.93, 29.26)
        .lt(60.39, 28.16)
        .cp()
    arm1.graphics.beginStroke('#000').ss(1).f(green)	
        // leaves 1
        .mt(9.81, 57.18)
        .bt(9.81, 57.18, 12.37, 60.05, 12.24, 61.81)
        .bt(12.11, 63.56, 11.23, 64.38, 11.54, 65.43)
        .bt(11.86, 66.47, 13.33, 67.86, 13.31, 67.86)
        .bt(13.3, 67.86, 5.76, 68.21, 5.35, 63.14)
        .bt(4.94, 58.07, 9.81, 57.18, 9.81, 57.18)
        .cp()
        .ef()
        .f(green)
        .mt(8.54, 43.53)
        .bt(8.54, 43.53, 9.94, 46.49, 6.71, 49.36)
        .bt(3.47, 52.23, 2.28, 52.41, 2.69, 54.85)
        .bt(3.1, 57.28, 2.72, 57.76, 2.72, 57.76)
        .bt(2.72, 57.76, -0.96, 50.08, 2.71, 45.64)
        .bt(6.39, 41.2, 8.54, 43.53, 8.54, 43.53)
        .cp()
        .ef()
        .f(green)
        .mt(27.93, 5.12)
        .bt(27.93, 5.12, 27.87, 6.51, 23.82, 8.21)
        .bt(19.76, 9.92, 19.41, 6.75, 16.89, 8.93)
        .bt(14.38, 11.12, 13.54, 12.36, 13.54, 12.36)
        .bt(13.54, 12.36, 14.53, 2.86, 20.4, 2.12)
        .bt(26.28, 1.38, 27.93, 5.12, 27.93, 5.12)
        .cp()
        .ef()
        .f(green)
        .mt(16.97, 25.18)
        .bt(16.97, 25.18, 18.3, 25.24, 19.2, 22.35)
        .bt(20.1, 19.47, 19.13, 16.38, 20.5, 14.02)
        .bt(21.87, 11.66, 25.55, 10.62, 25.55, 10.62)
        .bt(25.55, 10.62, 16.62, 9.01, 14.72, 14.73)
        .bt(12.82, 20.44, 16.97, 25.18, 16.97, 25.18)
        .cp()
        .ef()
        .f(green)
        .mt(4.75, 34.14)
        .bt(4.75, 34.14, 7.18, 34.8, 7.11, 37.75)
        .bt(7.05, 40.69, 3.13, 42.57, 3.23, 44.3)
        .bt(3.33, 46.02, 2.5, 48.47, 2.5, 48.47)
        .bt(2.5, 48.47, -0.88, 38.8, 1.28, 35.84)
        .bt(3.44, 32.87, 4.75, 34.14, 4.75, 34.14)
        .cp()
        .ef()
        .f(green)
        .mt(33.84, 61.02)
        .bt(33.84, 61.02, 34.19, 63.75, 36.86, 66.48)
        .bt(39.53, 69.21, 40.6, 72.55, 40.6, 72.55)
        .bt(40.6, 72.55, 44.63, 63.14, 41.08, 60.82)
        .bt(37.52, 58.51, 33.84, 61.02, 33.84, 61.02)
        .cp()
        .ef()
        // vines 1
        .mt(22.11, 64.5)
        .bt(22.11, 64.5, 25.07, 59.18, 31.04, 60.06)
        .bt(37, 60.95, 39.6, 63.51, 39.6, 63.51)
        .mt(23.42, 50.78)
        .bt(23.42, 50.78, 30.68, 45.47, 22.42, 36.21)
        .bt(14.17, 26.95, 16.57, 20.26, 16.57, 20.26)
        .mt(23.42, 37.49)
        .bt(23.42, 37.49, 15.23, 26.33, 8.83, 29.15)
        .bt(2.42, 31.97, 3.29, 39.93, 3.3, 39.93)
        .mt(15.14, 47.78)
        .bt(15.14, 47.78, 14.74, 40.56, 9.25, 42.75)
        .bt(3.77, 44.95, 3.69, 46.91, 3.69, 46.91)
        .mt(26.04, 40.49)
        .bt(26.04, 40.49, 19.2, 33.43, 24.06, 22.18)
        .bt(28.93, 10.93, 35.78, 12.2, 30.67, 6.83)
        .bt(25.56, 1.46, 21.46, 4.67, 21.46, 4.67)
        .mt(21.68, 60.64)
        .bt(21.68, 60.64, 24.08, 54.31, 14.29, 55.22)
        .bt(4.51, 56.13, 8.5, 63.09, 8.5, 63.09)
        // arm 1
        .f(green)
        .mt(50.7, 90.89)
        .bt(50.7, 90.89, 44.08, 75.89, 33.95, 79.25)
        .bt(23.82, 82.61, 32.18, 85.49, 24.73, 90.89)
        .bt(17.28, 96.29, 7.6, 91.39, 7.58, 77.64)
        .bt(7.56, 63.89, 19.37, 71.22, 21.52, 62.23)
        .bt(23.67, 53.23, 20.69, 47.34, 14.28, 49.21)
        .bt(7.87, 51.08, 7.34, 54.34, 7.34, 54.34)
        .bt(7.34, 54.34, 9.71, 47.02, 15.65, 47.16)
        .bt(21.59, 47.3, 27.09, 52.63, 23.92, 62.33)
        .bt(20.75, 72.04, 16.91, 66.26, 12.31, 72.44)
        .bt(7.71, 78.62, 12.43, 89.45, 16.67, 89.97)
        .bt(20.92, 90.5, 23.7, 93, 26.13, 82.41)
        .bt(28.56, 71.83, 46.87, 79.98, 46.87, 79.98)
        .lt(50.7, 90.89)
        .cp()
    body.graphics.beginStroke('#000').ss(1).f(green)
        .mt(49.41, 58.16)
        .bt(49.41, 58.16, 51.27, 50.06, 47.35, 46.95)
        .bt(43.44, 43.85, 38.61, 36.93, 40.1, 29.24)
        .bt(41.59, 21.55, 39.48, 18.89, 39.46, 18.89)
        .bt(39.45, 18.89, 44.11, 18.9, 45.47, 20.93)
        .bt(46.84, 22.97, 47.5, 24.77, 47.5, 24.77)
        .bt(47.5, 24.77, 47.62, 20.07, 48.94, 18.36)
        .bt(50.26, 16.64, 54.48, 14.24, 54.89, 12.5)
        .bt(55.31, 10.76, 60.02, 15.85, 60.25, 19.26)
        .bt(60.48, 22.66, 59.71, 24.72, 59.71, 24.72)
        .bt(59.71, 24.72, 62.8, 23.61, 63.91, 21.81)
        .bt(65.01, 20.02, 65.98, 14.4, 65.98, 14.4)
        .bt(65.98, 14.4, 68.63, 20.62, 66.96, 24.78)
        .bt(65.29, 28.94, 58.58, 36.11, 57.82, 40.15)
        .bt(57.07, 44.18, 58.18, 49.12, 57.33, 52.2)
        .bt(56.48, 55.27, 49.8, 69.73, 49.69, 76.26)
        .bt(49.57, 82.8, 64.17, 95.41, 63.37, 101.8)
        .bt(62.57, 108.19, 59.32, 110.94, 54.01, 110.43)
        .bt(48.7, 109.93, 47.73, 102.08, 49.62, 98.44)
        .bt(51.51, 94.79, 45.44, 84.99, 44.74, 76.38)
        .bt(44.04, 67.76, 49.41, 58.16, 49.41, 58.16)
        .cp()
        .ef()
        .es()
        .beginStroke('#000').ss(1)
        .mt(42.27, 30.72)
        .bt(42.27, 30.72, 41.13, 35.56, 43.24, 39.3)
        .bt(45.35, 43.04, 45.11, 42.97, 45.11, 42.97)
        .es()
        .beginStroke('#000').ss(1) 
        .mt(48.17, 28.16)
        .bt(48.17, 28.16, 44.27, 32.14, 45.09, 37.04)
        .bt(45.91, 41.94, 47.64, 45.76, 47.64, 45.76)
        .es()
        .beginStroke('#000').ss(1)
        .mt(49.85, 32)
        .bt(49.85, 32, 47.82, 34.78, 47.92, 39.66)
        .bt(48.02, 44.54, 49.29, 45.97, 49.29, 45.97)
        .f(green)
        .mt(49.43, 58.03)
        .bt(49.43, 58.03, 49.5, 54.26, 48.61, 52.81)
        .bt(47.73, 51.36, 46.14, 50.18, 46.14, 50.18)
        .bt(46.14, 50.18, 50.5, 51.74, 52.59, 51.08)
        .bt(54.67, 50.42, 54.86, 49.8, 54.83, 49.8)

    eye2.graphics.beginStroke('#000').ss(1).beginRadialGradientFill(['rgb(255, 255, 255)',blendedColor('rgb(255, 255, 255)', 'rgb(255, 0, 0)', 0.5),'rgb(255, 0, 0)'],[0,0.1,1],133, 104, 5, 139, 113, 23)
    	//.dc(51.21, 33.03, 14.18)
    	.dc(58, 40, 7)
    	.ef()
    	.f('#000')
    	.dc(60, 42, 2)
    arm2.graphics.beginStroke('#000').ss(1).beginFill(green)
        // leaves 2
        .mt(86.95, 70.84)
        .bt(86.95, 70.84, 88.84, 76.6, 84.84, 77.1)
        .bt(80.84, 77.6, 79.84, 75.87, 76.58, 77.41)
        .bt(73.33, 78.96, 79.37, 70.51, 82.16, 70.16)
        .bt(84.94, 69.81, 86.95, 70.84, 86.95, 70.84)
        .cp()
        .ef()
        .f(green)
        .mt(85.68, 10.67)
        .bt(85.68, 10.67, 82.44, 10.22, 82.37, 12.1)
        .bt(82.31, 13.98, 83.04, 15.93, 78.87, 16.68)
        .bt(74.69, 17.43, 74.05, 18.35, 74.05, 18.35)
        .bt(74.05, 18.35, 73.65, 9.21, 77.05, 8.73)
        .bt(80.46, 8.25, 85.68, 10.67, 85.68, 10.67)
        .cp()
        .ef()
        .f(green)
        .mt(84.84, 23.9)
        .bt(84.84, 23.9, 84.52, 25.96, 80.34, 26.03)
        .bt(76.16, 26.1, 72.06, 25.03, 71.2, 26.93)
        .bt(70.35, 28.82, 74.47, 19.88, 80.38, 20.17)
        .bt(86.28, 20.45, 84.84, 23.9, 84.84, 23.9)
        .cp()
        .ef()
        .f(green)
        .mt(73.88, 29.44)
        .bt(73.88, 29.44, 68.3, 28.55, 69.3, 25.33)
        .bt(70.3, 22.12, 70.02, 15.04, 70.02, 15.04)
        .bt(70.02, 15.04, 77.36, 20.31, 77.15, 22.87)
        .bt(76.95, 25.43, 73.88, 29.44, 73.88, 29.44)
        .cp()
        .ef()
        .f(green)
        .mt(73.88, 48.65)
        .bt(73.88, 48.65, 74.21, 52.43, 73.4, 53.72)
        .bt(72.6, 55, 69.16, 55.1, 68.46, 56.22)
        .bt(67.76, 57.35, 66.82, 58.87, 66.82, 58.87)
        .bt(66.82, 58.87, 66.22, 50.5, 69.42, 48.22)
        .bt(72.62, 45.94, 73.88, 48.65, 73.88, 48.65)
        .cp()
        .ef()
        // vines 2			        
        .mt(89.26, 54.55)
        .bt(89.26, 54.55, 93.01, 52.72, 94.5, 45.39)
        .bt(95.99, 38.07, 97.58, 27.29, 89.31, 24.65)
        .bt(81.04, 22.02, 80.3, 22.85, 80.3, 22.85)
        .mt(95.06, 30.17)
        .bt(95.06, 30.17, 108.1, 16.98, 93.39, 12)
        .bt(78.68, 7.03, 78.5, 11.81, 78.5, 11.81)
        .mt(76.44, 62.25)
        .bt(76.44, 62.25, 95.16, 57.21, 92.76, 63.6)
        .bt(90.37, 69.98, 82.14, 73.28, 82.14, 73.28)
        .mt(88.02, 51.13)
        .bt(88.02, 51.13, 88.58, 41.56, 78.85, 45.73)
        .bt(69.11, 49.91, 70.07, 52.42, 70.07, 52.42)
        .mt(83.47, 35.3)
        .bt(83.47, 35.3, 74.51, 38.22, 74.5, 32.06)
        .bt(74.5, 25.89, 73.98, 23.4, 73.98, 23.4)
        // arm 2
        .f(green)
        .mt(52.38, 87.48)
        .bt(52.38, 87.48, 56.41, 87.46, 57.4, 83.27)
        .bt(58.39, 79.08, 58.18, 71.66, 59.62, 68.96)
        .bt(61.07, 66.26, 64.29, 60.59, 70.81, 60.9)
        .bt(77.33, 61.2, 85.94, 60.81, 86.95, 54.38)
        .bt(87.96, 47.94, 88.63, 40.11, 84.5, 38.48)
        .bt(80.37, 36.85, 73.67, 38.9, 73.67, 38.9)
        .bt(73.67, 38.9, 81.86, 33.62, 86.04, 36.29)
        .bt(90.23, 38.95, 90.16, 53.26, 89.37, 55.08)
        .bt(88.58, 56.9, 83.05, 64.14, 70.99, 63.29)
        .bt(58.93, 62.44, 61.18, 78.67, 59.82, 83.41)
        .bt(58.45, 88.15, 55.06, 90.76, 55.06, 90.76)
    leg2.graphics.beginStroke('#000').ss(1).beginFill(brown)
        .mt(56.6, 105.4)
        .bt(56.6, 105.4, 54.3, 112.12, 57.32, 115.71)
        .bt(60.34, 119.29, 62.91, 120.21, 62.91, 120.21)
        .bt(62.91, 120.21, 59.39, 117.4, 59.34, 112.72)
        .bt(59.3, 108.04, 61.71, 103.22, 61.71, 103.22)
        .bt(61.71, 103.22, 61.94, 100.56, 59.71, 100.93)
        .bt(57.48, 101.3, 56.6, 105.4, 56.6, 105.4)
        .cp()
	bodyCont.addChild(head,arm1,leg1,eye1,body,eye2,arm2,leg2)
	return bodyCont
}
function drawAndroidBody(){
	var bodyCont = new Container(),
		head = new Shape(),
		rightarm = new Shape(),
		rightleg = new Shape(),
		leftarm = new Shape(),
		leftleg = new Shape(),
		body = new Shape(),
		details = new Shape()
	leftarm.graphics
		.s('black').ss(1)
		.f('rgb(85, 85, 85)')
//// Android
//// robot left arm
//// Bezier 117 Drawing
		.mt(37.2, 43.24)
		.bt(37.2, 43.24, 34.49, 50.03, 29.84, 51.09)
		.bt(25.18, 52.14, 18.02, 51.78, 15.13, 45.46)
		.bt(12.23, 39.13, 15.38, 35.85, 15.38, 35.85)
		.lt(11.24, 33.24)
		.bt(11.24, 33.24, 7.55, 41.87, 11.42, 47.25)
		.bt(15.29, 52.64, 19.8, 57.19, 27.93, 56.06)
		.bt(36.05, 54.94, 40.27, 46.19, 40.27, 46.19)
		.bt(40.27, 46.19, 40.85, 43.42, 39.48, 42.9)
		.bt(38.11, 42.38, 37.2, 43.24, 37.2, 43.24)
		.cp()
		.es()

		.s('black').ss(1)
//// Oval 16 Drawing
		.f('rgb(128, 128, 128)')
		.dc(40, 43, 4)

//// Bezier 121 Drawing
		.mt(11.5, 29.5)
		.bt(11.5, 29.5, 11.9, 24.15, 9.04, 21.85)
		.bt(6.17, 19.55, 2.9, 19.51, 2.85, 20.64)
		.bt(2.8, 21.77, 6.98, 21.5, 8.07, 24.32)
		.bt(9.16, 27.14, 8, 32.99, 9.71, 31.83)
		.bt(11.42, 30.67, 11.5, 29.5, 11.5, 29.5)
		.cp()
		.es()

		.s('black').ss(1)

//// Oval 17 Drawing
		.dc(13, 32, 5)
		.es()

		.s('black').ss(1)
//// Bezier 119 Drawing
		.mt(17.5, 32.5)
		.bt(18.5, 31.5, 22.01, 31.61, 23.7, 29.92)
		.bt(25.4, 28.23, 26.34, 25.67, 26.7, 27.17)
		.bt(27.06, 28.67, 26.46, 31.39, 24.66, 32.17)
		.bt(22.87, 32.95, 18.19, 35.48, 17.38, 34.54)
		.bt(16.58, 33.59, 16.5, 33.5, 17.5, 32.5)
		.cp()
		.es()

		.s('black').ss(1)
//// Bezier 120 Drawing
		.mt(16.5, 29.5)
		.bt(16.5, 27.5, 18.52, 24.14, 17.62, 20.54)
		.bt(16.72, 16.94, 13.98, 14.15, 12.96, 15.18)
		.bt(11.94, 16.21, 16.27, 21.02, 15.86, 22.91)
		.bt(15.45, 24.8, 13.29, 28.49, 14.41, 29.37)
		.bt(15.53, 30.25, 16.5, 31.5, 16.5, 29.5)
		.cp()
		.es()

	leftleg.graphics
		.s('black').ss(1)
		.f('rgb(128, 128, 128)')

//// robot left leg
//// Bezier 112 Drawing
		.mt(44.93, 89.57)
		.bt(44.01, 89.57, 40.33, 89.26, 39.29, 93.63)
		.bt(38.26, 98.01, 36.07, 106.68, 38.04, 110.13)
		.bt(40.02, 113.59, 44.26, 114.4, 46.54, 114.26)
		.bt(48.83, 114.11, 52.11, 112.96, 52.49, 112.34)
		.bt(52.87, 111.73, 54.44, 112.49, 53.42, 105.76)
		.bt(52.4, 99.03, 50.72, 91.9, 49.01, 90.64)
		.bt(47.3, 89.38, 45.85, 89.57, 44.93, 89.57)
		.cp()

		.f('rgb(85, 85, 85)')
//// Bezier 111 Drawing
		.mt(52.5, 73.5)
		.bt(52.5, 73.5, 43.6, 77.58, 42.29, 85.29)
		.bt(40.98, 93.01, 45.32, 92.42, 45.32, 92.42)
		.lt(46.07, 91.48)
		.bt(46.07, 91.48, 44.6, 85.62, 46.74, 82.8)
		.bt(48.88, 79.97, 55.47, 76.01, 55.47, 76.01)
		.lt(52.5, 73.5)
		.cp()

		.f('rgb(128, 128, 128)')
//// Bezier 115 Drawing
		.mt(43.91, 114.12)
		.bt(43.91, 114.12, 44.6, 110.37, 40, 107.86)
		.bt(35.4, 105.35, 26.08, 112.67, 28.92, 114.42)
		.bt(31.76, 116.18, 38.74, 115.72, 40.55, 115.47)
		.bt(42.36, 115.23, 43.91, 114.12, 43.91, 114.12)
		.cp()
		.ef()
		.es()


	body.graphics
		.s('black').ss(1)
		.f('rgb(128, 128, 128)')

//// robot body
//// Oval 14 Drawing
		.dc(57, 73, 8)
		.es()

		.s('black').ss(1)
//// Bezier 107 Drawing
		.mt(53.93, 58.17)
		.bt(53.93, 58.17, 52.75, 62.07, 53.91, 65.07)
		.bt(55.07, 68.08, 56.35, 67.22, 56.09, 68.75)
		.bt(55.83, 70.29, 55.41, 72.28, 52.13, 71)
		.bt(48.85, 69.72, 47.99, 66.79, 47.83, 63.96)
		.bt(47.67, 61.14, 48.17, 57.88, 48.17, 57.88)
		.lt(53.93, 58.17)
		.cp()
		.es()

		.s('black').ss(1)
		.f('rgb(85, 85, 85)')
//// Oval 13 Drawing
		.dc(50, 51, 12)
		.es()

		.s('black').ss(1)
		.f('rgb(128, 128, 128)')
//// Bezier 108 Drawing
		.mt(52.49, 31.35)
		.bt(52.49, 31.35, 49.8, 34.45, 49.81, 37.16)
		.bt(49.83, 39.87, 51.17, 41.45, 51.17, 41.45)
		.bt(51.17, 41.45, 51.29, 43.33, 48.84, 43.48)
		.bt(46.39, 43.63, 45.27, 40.32, 45.19, 37.02)
		.bt(45.11, 33.73, 46.87, 30.11, 46.87, 30.11)
		.lt(52.49, 31.35)
		.cp()
		.es()
		.ef()


	head.graphics
		.s('black').ss(1)
		.f('rgb(85, 85, 85)')
//// robot head
//// Oval 7 Drawing
		.dc(46, 20, 14)
		.es()

		.s('black').ss(1)
		.f('rgb(170, 170, 170)')
//// Oval 5 Drawing
		.dc(51, 20, 5)
		.es()

		.s('black').ss(1)
//// Oval 6 Drawing
		.dc(34, 20, 5)
		.es()

		.s('black').ss(1)
		.f('rgb(128, 128, 128)')
//// Bezier 91 Drawing
		.mt(32.51, 13.35)
		.bt(32.51, 13.35, 35.47, 12.13, 37.86, 14.29)
		.bt(40.25, 16.46, 41.26, 21.13, 41.26, 21.13)
		.bt(41.26, 21.13, 44.51, 13.01, 48.91, 12.75)
		.bt(53.32, 12.48, 56.55, 15.93, 56.55, 15.93)
		.lt(60.85, 15.47)
		.bt(60.85, 15.47, 57.7, 4, 45.81, 4.99)
		.bt(33.91, 5.97, 32.51, 13.35, 32.51, 13.35)
		.cp()
		.es()

		.s('black').ss(1)
//// Oval 10 Drawing
		.dc(41, 30, 4)
		.ef()
		.es()

		.s('black').ss(1)
//// Bezier 92 Drawing
		.mt(41.07, 33.77)
		.lt(46.94, 33.63)
		.bt(46.94, 33.63, 48.27, 30.31, 45.9, 27.91)
		.bt(43.54, 25.51, 40.27, 25.68, 40.27, 25.68)     
		.es()

		.s('black').ss(1)
//// Bezier 94 Drawing
		.mt(40.51, 27.35)
		.lt(40.54, 32.42)
		.es()

		.s('black').ss(1)
//// Bezier 101 Drawing
		.mt(42.01, 28.35)
		.lt(42.01, 31.42)
		.es()

		.s('black').ss(1)
//// Bezier 102 Drawing
		.mt(39.13, 28.34)
		.lt(39.13, 31.41)
		.es()

		.f('rgb(0, 0, 0)')
//// Oval 11 Drawing
		.dc(34, 21, 1)

//// Oval 12 Drawing
		.dc(52, 21, 1)


	rightleg.graphics
		.s('black').ss(1)
		.f('rgb(85, 85, 85)')

//// robot right leg
//// Bezier 113 Drawing
		.mt(59.5, 73.14)
		.bt(58.5, 74.14, 57.19, 74.55, 58.08, 76.54)
		.bt(58.97, 78.54, 58.92, 91.22, 61.38, 92.58)
		.bt(63.85, 93.93, 64.74, 93.35, 65.31, 92.84)
		.bt(65.89, 92.32, 63.67, 85.84, 63.1, 83.08)
		.bt(62.52, 80.32, 62.05, 75.03, 61.18, 73.83)
		.bt(60.31, 72.64, 60.5, 72.14, 59.5, 73.14)
		.cp()
		.es()

		.s('black').ss(1)
		.f('rgb(128, 128, 128)')
//// Bezier 114 Drawing
		.mt(57.49, 115.04)
		.bt(56.59, 114.14, 55.83, 112.95, 56, 109.88)
		.bt(56.16, 106.81, 56.1, 93.79, 58.07, 91.31)
		.bt(60.05, 88.84, 62.97, 87.43, 65.4, 88.8)
		.bt(67.84, 90.16, 67.8, 90.57, 69.14, 93)
		.bt(70.48, 95.43, 75.45, 111.35, 73.74, 113.28)
		.bt(72.04, 115.22, 69.85, 116.9, 66.63, 117.07)
		.bt(63.4, 117.24, 58.39, 115.94, 57.49, 115.04)
		.cp()
		.es()

		.s('black').ss(1)
//// Bezier 116 Drawing
		.mt(60.5, 117.5)
		.bt(59.5, 116.5, 61.22, 111.25, 64.58, 110.35)
		.bt(67.94, 109.45, 69.45, 109.46, 71.48, 111.57)
		.bt(73.5, 113.69, 75.29, 115.51, 74.56, 116.59)
		.bt(73.82, 117.68, 71.53, 119.84, 68.97, 119.77)
		.bt(66.41, 119.69, 61.5, 118.5, 60.5, 117.5)
		.cp()

	rightarm.graphics
		.s('black').ss(1)
		.f('rgb(128, 128, 128)')
//// robot right arm
//// Oval 15 Drawing
		.dc(61, 44, 5)
		.es()

		.s('black').ss(1)        
		.f('rgb(85, 85, 85)')
//// Bezier 118 Drawing
		.mt(62.5, 44.5)
		.bt(61.5, 44.5, 59.92, 45.63, 61.66, 47.08)
		.bt(63.4, 48.53, 72.5, 49.87, 76.88, 62.07)
		.bt(81.26, 74.27, 78.38, 76.23, 81.37, 76.9)
		.bt(84.36, 77.57, 84.8, 76.87, 84.85, 73.87)
		.bt(84.89, 70.88, 82.62, 60.42, 78.54, 54.91)
		.bt(74.45, 49.39, 63.5, 44.5, 62.5, 44.5)
		.cp()
		.es()

		.s('black').ss(1)
		.f('rgb(128, 128, 128)')
//// Bezier 124 Drawing
		.mt(82.86, 77.75)
		.bt(82.86, 77.75, 83.43, 83.03, 81.07, 85.07)
		.bt(78.71, 87.1, 75.09, 85.88, 74.89, 87.38)
		.bt(74.68, 88.88, 82.98, 88.3, 83.8, 86.14)
		.bt(84.62, 83.98, 87.29, 77.83, 86.19, 77.15)
		.bt(85.08, 76.47, 82.86, 77.75, 82.86, 77.75)
		.cp()
		.es()

		.s('black').ss(1)
//// Bezier 123 Drawing
		.mt(80.5, 79.5)
		.bt(80.5, 81.5, 80.72, 84.92, 79.04, 86.38)
		.bt(77.35, 87.85, 74.23, 88.01, 74.17, 89.2)
		.bt(74.1, 90.4, 80.33, 89.43, 81.72, 86.75)
		.bt(83.1, 84.07, 83.09, 80.28, 82.63, 79.36)
		.bt(82.17, 78.45, 80.5, 77.5, 80.5, 79.5)
		.cp()
		.es()

		.s('black').ss(1)
//// Bezier 122 Drawing
		.mt(78.5, 75.5)
		.bt(78.5, 75.5, 73.52, 76.98, 72.62, 79)
		.bt(71.71, 81.02, 70.39, 85.74, 72.34, 83.83)
		.bt(74.28, 81.92, 73.81, 79.62, 75.4, 79.15)
		.bt(76.98, 78.69, 79.54, 78.72, 79.76, 78.2)
		.bt(79.99, 77.69, 78.5, 75.5, 78.5, 75.5)
		.cp()
		.es()

		.s('black').ss(1)
//// Oval 18 Drawing
		.dc(82, 76, 5)

	details.graphics
		.s('rgb(0, 0, 0)').ss(1)
//// details
//// Bezier 109 Drawing
		.mt(54.53, 40.66)
		.bt(54.53, 40.66, 57.86, 46.86, 51.64, 48.84)
		.bt(45.42, 50.81, 44.26, 53.26, 44.4, 56.42)
		.bt(44.53, 59.57, 46.91, 62.21, 46.91, 62.21)

//// Bezier 110 Drawing
		.mt(42.88, 42.05)
		.bt(42.88, 42.05, 39.56, 45.75, 40.22, 48.11)
		.bt(40.87, 50.46, 42.82, 50.05, 42.3, 52.4)
		.bt(41.79, 54.76, 41.78, 59.15, 43.69, 60.93)
		.es()

		.f('rgb(170, 170, 170)')  
//// Bezier 125 Drawing
		.mt(62.5, 89.5)
		.bt(62.5, 89.5, 59.22, 91.56, 58.79, 93.1)
		.bt(58.37, 94.63, 57.41, 110.13, 57.64, 111.64)
		.bt(57.88, 113.15, 59.02, 113.97, 59.02, 113.97)
		.bt(59.02, 113.97, 59.76, 110.16, 62.14, 108.96)
		.bt(64.52, 107.76, 66.37, 107.8, 66.37, 107.8)
		.lt(62.5, 89.5)
		.cp()

//// Bezier 126 Drawing
		.mt(67, 111)
		.bt(67, 111, 64.69, 111.53, 64.13, 112.09)
		.bt(63.56, 112.64, 61.8, 114.63, 61.79, 115.51)
		.bt(61.78, 116.39, 68.64, 118.23, 68.64, 118.23)
		.bt(68.64, 118.23, 66.18, 115.29, 66.25, 113.85)
		.bt(66.33, 112.42, 67, 111, 67, 111)
		.cp()

//// Bezier 127 Drawing
		.mt(40, 109)
		.bt(40, 109, 38.03, 108.69, 36.97, 108.79)
		.bt(35.9, 108.9, 33.57, 109.88, 32.8, 110.48)
		.bt(32.03, 111.08, 29.93, 112.58, 30.06, 113.07)
		.bt(30.18, 113.56, 35.66, 114.14, 35.66, 114.14)
		.bt(35.66, 114.14, 31.98, 112.58, 34.79, 110.93)
		.bt(37.59, 109.29, 40, 109, 40, 109)
		.cp()

//// Bezier 128 Drawing
		.mt(41, 107)
		.bt(41, 107, 39.58, 105.79, 38.97, 105.68)
		.bt(38.36, 105.58, 39.25, 98.62, 40.1, 96.96)
		.bt(40.96, 95.31, 40.53, 92.37, 41.5, 92.72)
		.bt(42.48, 93.07, 44.02, 94.1, 45.08, 93.96)
		.bt(46.14, 93.83, 47.09, 93.2, 47.09, 93.2)
		.bt(47.09, 93.2, 44.68, 95.95, 43.83, 99.86)
		.bt(42.98, 103.77, 44.61, 109.79, 44.61, 109.79)
		.lt(41, 107)
		.cp()

//// Bezier 129 Drawing
		.mt(51, 72)
		.bt(51, 72, 50, 75.18, 52.66, 76.48)
		.bt(55.33, 77.78, 56.57, 78.25, 56.57, 78.25)
		.bt(56.57, 78.25, 53.62, 75.83, 53.95, 74.33)
		.bt(54.28, 72.84, 55.07, 72.64, 55.07, 72.64)
		.bt(55.07, 72.64, 53.76, 73.06, 52.85, 72.88)
		.bt(51.93, 72.7, 51, 72, 51, 72)
		.cp()

		.f('rgb(128, 128, 128)')
//// Bezier 130 Drawing
		.mt(52, 50)
		.bt(52, 50, 47.11, 51.42, 46.35, 54.15)
		.bt(45.59, 56.89, 47.87, 60.76, 47.88, 60.76)
		.bt(47.89, 60.76, 45.98, 57.58, 48.38, 54.44)
		.bt(50.78, 51.3, 53.29, 50.88, 55.25, 51.22)
		.bt(57.22, 51.56, 58.64, 53.42, 58.64, 53.42)
		.bt(58.64, 53.42, 59.72, 51.11, 59.63, 50.78)
		.bt(59.54, 50.44, 57.12, 50.03, 56.56, 48.92)
		.bt(56, 47.8, 55.93, 47.46, 55.93, 47.46)
		.bt(55.93, 47.46, 54.79, 49.03, 53.92, 49.41)
		.bt(53.04, 49.79, 52, 50, 52, 50)
		.cp()

		.f('rgb(170, 170, 170)') 
//// Bezier 131 Drawing
		.mt(38, 13)
		.bt(38, 13, 36.97, 11.82, 35.68, 11.8)
		.bt(34.39, 11.79, 34.17, 11.86, 34.2, 11.86)
		.bt(34.23, 11.86, 36.86, 7.76, 40.38, 7.06)
		.bt(43.91, 6.36, 49.36, 6.19, 49.36, 6.19)
		.bt(49.36, 6.19, 43.62, 6.53, 41.62, 9.54)
		.bt(39.62, 12.56, 40.06, 14.68, 40.06, 14.68)
		.lt(38, 13)
		.cp()

//// Bezier 132 Drawing
		.mt(13, 29)
		.bt(13, 29, 9.83, 29.97, 9.84, 32.01)
		.bt(9.86, 34.05, 12.05, 35.76, 12.05, 35.76)
		.bt(12.05, 35.76, 11.07, 33.89, 11.69, 32.08)
		.bt(12.31, 30.27, 13, 29, 13, 29)
		.cp()

//// Bezier 133 Drawing
		.mt(60, 41)
		.bt(60, 41, 57.13, 42.33, 57.58, 43.87)
		.bt(58.02, 45.42, 58.88, 46.79, 58.88, 46.79)
		.bt(58.88, 46.79, 58.12, 44.53, 58.94, 43.08)
		.bt(59.77, 41.64, 60, 41, 60, 41)
		.cp()
		
		.f('rgb(128, 128, 128)')
//// Bezier 134 Drawing
		.mt(45, 42)
		.bt(45, 42, 40.83, 44.92, 41.57, 47.4)
		.bt(42.32, 49.87, 43.4, 50.43, 43.4, 50.43)
		.bt(43.4, 50.43, 42.21, 47.97, 43.23, 45.42)
		.bt(44.26, 42.86, 45, 42, 45, 42)
		.cp()

		.f('rgb(255, 255, 255)')
//// Bezier 135 Drawing
		.mt(50, 17)
		.bt(50, 17, 46.59, 17.3, 47.66, 20.63)
		.bt(48.74, 23.95, 50.41, 24.29, 50.41, 24.29)
		.bt(50.41, 24.29, 48.87, 22.59, 48.92, 20.22)
		.bt(48.97, 17.85, 50, 17, 50, 17)
		.cp()

//// Bezier 136 Drawing
		.mt(35, 17)
		.bt(35, 17, 31.49, 16.97, 31.84, 20.1)
		.bt(32.2, 23.23, 34.88, 24.18, 34.88, 24.18)
		.bt(34.88, 24.18, 32.31, 21.09, 33.07, 19.37)
		.bt(33.84, 17.64, 35, 17, 35, 17)
		.cp()

		.f('rgb(170, 170, 170)')
//// Bezier 137 Drawing
		.mt(82, 73)
		.bt(82, 73, 78.77, 72.98, 79.14, 76.43)
		.bt(79.52, 79.87, 81.27, 79.88, 81.27, 79.88)
		.bt(81.27, 79.88, 80.06, 78.36, 80.76, 76.12)
		.bt(81.46, 73.89, 82, 73, 82, 73)
		.cp()

		.f('rgb(0, 0, 0)')
//// Bezier 138 Drawing
		.mt(49, 65)
		.bt(49, 65, 49.46, 65.84, 51.46, 65.29)
		.bt(53.46, 64.74, 53.33, 64.53, 53.33, 64.53)
		.lt(53.22, 62.87)
		.bt(53.22, 62.87, 47.61, 63.09, 47.61, 63.1)
		.bt(47.61, 63.11, 48.04, 65.24, 48.04, 65.24)
		.lt(49, 65)
		.cp()

//// Bezier 139 Drawing
		.mt(46, 34)
		.lt(45.28, 36.9)
		.bt(45.28, 36.9, 46.1, 37.89, 47.82, 37.75)
		.bt(49.53, 37.6, 49.99, 37.39, 49.99, 37.39)
		.lt(51.05, 33.76)
		.lt(46, 34)
		.cp()

		.f('rgb(128, 128, 128)')
//// Bezier 140 Drawing
		.mt(62, 46)
		.bt(62, 46, 69.88, 48.56, 73.49, 53.37)
		.bt(77.11, 58.18, 77.79, 59.92, 78.7, 63.44)
		.bt(79.61, 66.97, 80.37, 70.85, 80.37, 70.85)
		.lt(81.7, 70.24)
		.bt(81.7, 70.24, 81.21, 63.84, 78.69, 58.58)
		.bt(76.16, 53.31, 73.45, 51.37, 72.19, 50.58)
		.bt(70.92, 49.79, 62, 46, 62, 46)
		.cp()

//// Bezier 141 Drawing
		.mt(13, 46)
		.bt(13, 46, 15.08, 52.24, 20.47, 54.3)
		.bt(25.87, 56.36, 33.19, 52.96, 33.19, 52.96)
		.bt(33.19, 52.96, 24.85, 55.52, 20.72, 53.13)
		.bt(16.58, 50.73, 13, 46, 13, 46)
		.cp()

		.f('rgb(0, 0, 0)')
//// Bezier 142 Drawing
		.mt(10, 37)
		.lt(10.02, 39.63)
		.bt(10.02, 39.63, 10.31, 40.57, 12.1, 40.27)
		.bt(13.88, 39.98, 14.05, 39.33, 14.05, 39.33)
		.lt(14.63, 37.9)
		.lt(12.7, 37.9)
		.lt(10, 37)
		.cp()
	bodyCont.addChild(leftleg,leftarm,body,head,rightarm,rightleg,details)
	return bodyCont
}
function drawSpeminCommScreen(){
	var bodyCont = new Container(),
		body = new Shape(),
		xoff = 0,yoff = -30

    var eye1 = drawSpeminEyeStalk(-80,-160,'blue')
    
    xoff = 0
    yoff = -30
	body.graphics 
		.s(black).ss(3)
        .f('blue').dc(530,360,30).f('white').dc(535,360,20).f('black').dc(535,360,5)   
		.f('blue')
		// .de(50,150,300,280)
		// .de(300,250,180,180)
		.mt(79 + xoff, 443 + yoff)
        .bt(31 + xoff, 425 + yoff, 67 + xoff, 421 + yoff, 71 + xoff, 362 + yoff)
        .bt(82 + xoff, 216 + yoff, 171 + xoff, 161 + yoff, 230 + xoff, 158 + yoff)
        .bt(278 + xoff, 156 + yoff, 328 + xoff, 185 + yoff, 347 + xoff, 213 + yoff)
        .bt(373 + xoff, 251 + yoff, 374 + xoff, 299 + yoff, 378 + xoff, 298 + yoff)
        .bt(451 + xoff, 280 + yoff, 484 + xoff, 301 + yoff, 495 + xoff, 311 + yoff)
        .bt(517 + xoff, 331 + yoff, 522 + xoff, 382 + yoff, 525 + xoff, 414 + yoff)
        .bt(526 + xoff, 429 + yoff, 554 + xoff, 445 + yoff, 513 + xoff, 464 + yoff)
        .bt(499 + xoff, 470 + yoff, 472 + xoff, 482 + yoff, 404 + xoff, 483 + yoff)
        .bt(344 + xoff, 484 + yoff, 133 + xoff, 463 + yoff, 80 + xoff, 444 + yoff)
        .cp()
        .ef()  
        .f('blue').dc(230,325,30).f('white').dc(230,320,20).f('black').dc(230,320,5)   
    var eye2 = drawSpeminEyeStalk(0,-50,'blue')   
    var eye3 = drawSpeminEyeStalk(-150,350,'blue')
    eye3.regX = 383+120
    eye3.regY = 370+250
    eye3.rotation = 270
	bodyCont.addChild(eye1,body,eye2,eye3)
	return bodyCont
}
function drawSpeminEyeStalk(xoff,yoff,fc){
    var shape = new Shape()
    // shape.regX = 383 + xoff
    // shape.regY = 370 + yoff
    shape.graphics
    	.f(fc).s('black').ss(3)
        .mt(383 + xoff, 370 + yoff)
        .bt(374 + xoff, 382 + yoff, 403 + xoff, 362 + yoff, 401 + xoff, 347 + yoff)
        .bt(399 + xoff, 332 + yoff, 394 + xoff, 330 + yoff, 397 + xoff, 314 + yoff)
        .bt(400 + xoff, 299 + yoff, 417 + xoff, 294 + yoff, 432 + xoff, 297 + yoff)
        .bt(463 + xoff, 303 + yoff, 462 + xoff, 327 + yoff, 456 + xoff, 339 + yoff)
        .bt(450 + xoff, 352 + yoff, 435 + xoff, 357 + yoff, 420 + xoff, 355 + yoff)
        .bt(413 + xoff, 354 + yoff, 407 + xoff, 371 + yoff, 399 + xoff, 390 + yoff)
        .ef()
        .f('white').dc(430 + xoff,320 + yoff,20).f('black').dc(430 + xoff,320 + yoff,5)
    return shape
}
function blendedColor(color1, color2, ratio) {
	var rgba1 = rgbaComponents(color1)
	var rgba2 = rgbaComponents(color2)
	return makeColor(rgba1[0] * (1-ratio) + rgba2[0] * ratio, rgba1[1] * (1-ratio) + rgba2[1] * ratio, rgba1[2] * (1-ratio) + rgba2[2] * ratio, rgba1[3] * (1-ratio) + rgba2[3] * ratio)
}

function makeColor(r, g, b, a) {
	return 'rgba(' + Math.round(255*r) + ', ' + Math.round(255*g) + ', ' + Math.round(255*b) + ', ' + a + ')'
}

function rgbaComponents(color) {
	if (color.substring(0, 3) === 'hsl') {
	return RGBAFromHSVA.apply(this, hslaComponents(color))
	}

	if (color.substring(0, 1) === '#') {
	var bytes = color.substring(1).split('')
	if (bytes.length === 3) {
	    bytes = [bytes[0], bytes[0], bytes[1], bytes[1], bytes[2], bytes[2]]
	}

	var normHex = '0x' + bytes.join('')
	return [(normHex>>16)&255/255, (normHex>>8)&255/255, normHex&255/255, 1]
	}

	var rgba = color.replace(/[^0-9,\.]/g, '').split(',')
	if (rgba.length === 3) {
	rgba.push(1)
	}

	if (color.indexOf('%') > -1) {
	return [rgba[0] / 100, rgba[1] / 100, rgba[2] / 100, rgba[3]]
	}

	return [rgba[0] / 255, rgba[1] / 255, rgba[2] / 255, rgba[3]]
}

function hslaComponents(color) {
	if (color.substring(0, 1) === '#' || color.substring(0, 3) === 'rgb') {
	return HSVAFromRGBA.apply(this, rgbaComponents(color))
	}

	var hsla = color.replace(/[^0-9,\.]/g, '').split(',')
	if (hsla.length < 4) {
	hsla.push(1)
	}

	return [hsla[0] / 360, hsla[1] / 100, hsla[2] / 100, hsla[3]]
}

function HSVAFromRGBA(r, g, b, a) {
	var max = Math.max(r, g, b), min = Math.min(r, g, b)
	var delta = max - min
	var h = 0, s = 0, v = max

	if (max > 0 && delta > 0.00001) {
	s = delta / max
	if (r == max) h = (g - b) / delta
	else if (g == max) h = 2 + (b - r) / delta
	else if (b == max) h = 4 + (r - g) / delta
	h /= 6
	if (h < 0) h += 1
	}
	return [h, s, v, a]
}

function RGBAFromHSVA(h, s, v, a) {
	var r, g, b, i, f, p, q, t

	i = Math.floor(h * 6)
	f = h * 6 - i
	p = v * (1 - s)
	q = v * (1 - f * s)
	t = v * (1 - (1 - f) * s)
	switch (i % 6) {
	case 0: r = v, g = t, b = p; break;
	case 1: r = q, g = v, b = p; break;
	case 2: r = p, g = v, b = t; break;
	case 3: r = p, g = q, b = v; break;
	case 4: r = t, g = p, b = v; break;
	case 5: r = v, g = p, b = q; break;
	}
	return [r, g, b, a]
}